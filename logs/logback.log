[INFO ] 11:10:34.974 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 32992 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:10:34.982 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:10:34.982 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:10:36.639 com.system.bgim.BgimApplication - Started BgimApplication in 2.067 seconds (JVM running for 2.996)
[INFO ] 11:10:36.641 com.system.bgim.AppRunner - ===========
[INFO ] 11:10:36.641 com.system.bgim.AppRunner - logger.info
[INFO ] 11:10:36.641 com.system.bgim.AppRunner - ===========
[TRACE] 11:10:36.641 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:10:36.641 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:10:36.641 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:10:36.642 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:10:36.642 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:10:36.642 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:11:38.365 c.s.bgim.mapper.UserMapper.userList - ==>  Preparing: SELECT * FROM org_user 
[DEBUG] 11:11:38.465 c.s.bgim.mapper.UserMapper.userList - ==> Parameters: 
[INFO ] 11:11:38.466 jdbc.sqlonly - SELECT * FROM org_user

[TRACE] 11:11:38.571 c.s.bgim.mapper.UserMapper.userList - <==    Columns: USER_ID, DOMAIN_ID, DEPT_ID, HR_GROUP_ID, HR_SYNC, HR_SYNC_GROUP, STATUS, IS_VALID, CREATE_DT, MODIFY_DT, PWD_DT, USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, PWD, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:11:38.575 c.s.bgim.mapper.UserMapper.userList - <==        Row: 10, 1, 10, 10, 1, 1, sync, Y, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, toni kroos, BGCOMMERCE, tonikroos1, CUSTOMER SUPPORT, BGCOMMERCE.tonikroos1, tonikroos1@gmail.com, 1234, tonikroos1@gmail.com, 010-8223-2221, 2020-02-01 00:00:00.0
[TRACE] 11:11:38.580 c.s.bgim.mapper.UserMapper.userList - <==        Row: null, null, null, null, null, null, null, null, null, null, null, Ddal, BGSPACE, ddal1, ASTRONAUT, BGSPACE.ddal1, ddal1@gmail.com, 1234, ddal1@gmail.com, 010-1111-2299, 2011-04-01 00:00:00.0
[TRACE] 11:11:38.581 c.s.bgim.mapper.UserMapper.userList - <==        Row: 0, null, null, null, null, null, null, null, 2020-10-06 16:25:58.0, 2020-10-20 16:22:02.0, null, Hoxy, BGSPACE, hoxy000, testdept, BGSPACE.hoxy000, hoxy000@gmail.com, 1234, null, null, null
[INFO ] 11:11:38.587 jdbc.resultsettable - 
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|user_id |domain_id |dept_id |hr_group_id |hr_sync |hr_sync_group |status |is_valid |create_dt             |modify_dt             |pwd_dt                |username   |companycode |empid      |deptcode         |code                  |login_id             |pwd  |email                |mobile        |hired_dt              |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|10      |1         |10      |10          |1       |1             |sync   |Y        |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |toni kroos |BGCOMMERCE  |tonikroos1 |CUSTOMER SUPPORT |BGCOMMERCE.tonikroos1 |tonikroos1@gmail.com |1234 |tonikroos1@gmail.com |010-8223-2221 |2020-02-01 00:00:00.0 |
|[null]  |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |[null]                |[null]                |[null]                |Ddal       |BGSPACE     |ddal1      |ASTRONAUT        |BGSPACE.ddal1         |ddal1@gmail.com      |1234 |ddal1@gmail.com      |010-1111-2299 |2011-04-01 00:00:00.0 |
|0       |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |2020-10-06 16:25:58.0 |2020-10-20 16:22:02.0 |[null]                |Hoxy       |BGSPACE     |hoxy000    |testdept         |BGSPACE.hoxy000       |hoxy000@gmail.com    |1234 |[null]               |[null]        |[null]                |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|

[DEBUG] 11:11:38.588 c.s.bgim.mapper.UserMapper.userList - <==      Total: 3
[DEBUG] 11:11:42.155 c.s.b.mapper.UserMapper.userDetail - ==>  Preparing: SELECT * FROM org_user WHERE CODE = ? 
[DEBUG] 11:11:42.159 c.s.b.mapper.UserMapper.userDetail - ==> Parameters: BGCOMMERCE.tonikroos1(String)
[INFO ] 11:11:42.159 jdbc.sqlonly - SELECT
            *
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.tonikroos1'

[TRACE] 11:11:42.166 c.s.b.mapper.UserMapper.userDetail - <==    Columns: USER_ID, DOMAIN_ID, DEPT_ID, HR_GROUP_ID, HR_SYNC, HR_SYNC_GROUP, STATUS, IS_VALID, CREATE_DT, MODIFY_DT, PWD_DT, USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, PWD, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:11:42.167 c.s.b.mapper.UserMapper.userDetail - <==        Row: 10, 1, 10, 10, 1, 1, sync, Y, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, toni kroos, BGCOMMERCE, tonikroos1, CUSTOMER SUPPORT, BGCOMMERCE.tonikroos1, tonikroos1@gmail.com, 1234, tonikroos1@gmail.com, 010-8223-2221, 2020-02-01 00:00:00.0
[INFO ] 11:11:42.169 jdbc.resultsettable - 
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|user_id |domain_id |dept_id |hr_group_id |hr_sync |hr_sync_group |status |is_valid |create_dt             |modify_dt             |pwd_dt                |username   |companycode |empid      |deptcode         |code                  |login_id             |pwd  |email                |mobile        |hired_dt              |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|10      |1         |10      |10          |1       |1             |sync   |Y        |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |toni kroos |BGCOMMERCE  |tonikroos1 |CUSTOMER SUPPORT |BGCOMMERCE.tonikroos1 |tonikroos1@gmail.com |1234 |tonikroos1@gmail.com |010-8223-2221 |2020-02-01 00:00:00.0 |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|

[DEBUG] 11:11:42.169 c.s.b.mapper.UserMapper.userDetail - <==      Total: 1
[DEBUG] 11:11:44.409 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:11:44.411 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:11:44.412 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:11:44.418 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:11:44.419 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:11:44.419 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:11:44.420 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:11:44.420 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:11:44.420 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:11:44.420 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:11:44.421 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:11:44.421 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:11:44.422 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:11:44.422 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:11:44.422 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:11:44.422 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:11:51.511 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:11:51.512 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:11:51.512 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:11:51.519 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:11:51.519 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:11:51.520 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:11:51.520 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:13:57.324 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 8496 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:13:57.326 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:13:57.326 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:13:58.827 com.system.bgim.BgimApplication - Started BgimApplication in 1.849 seconds (JVM running for 2.734)
[INFO ] 11:13:58.829 com.system.bgim.AppRunner - ===========
[INFO ] 11:13:58.829 com.system.bgim.AppRunner - logger.info
[INFO ] 11:13:58.829 com.system.bgim.AppRunner - ===========
[TRACE] 11:13:58.829 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:13:58.829 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:13:58.829 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:13:58.829 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:13:58.830 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:13:58.830 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:14:11.538 c.s.bgim.mapper.UserMapper.userList - ==>  Preparing: SELECT * FROM org_user 
[DEBUG] 11:14:11.641 c.s.bgim.mapper.UserMapper.userList - ==> Parameters: 
[INFO ] 11:14:11.641 jdbc.sqlonly - SELECT * FROM org_user

[TRACE] 11:14:11.738 c.s.bgim.mapper.UserMapper.userList - <==    Columns: USER_ID, DOMAIN_ID, DEPT_ID, HR_GROUP_ID, HR_SYNC, HR_SYNC_GROUP, STATUS, IS_VALID, CREATE_DT, MODIFY_DT, PWD_DT, USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, PWD, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:14:11.741 c.s.bgim.mapper.UserMapper.userList - <==        Row: 10, 1, 10, 10, 1, 1, sync, Y, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, toni kroos, BGCOMMERCE, tonikroos1, CUSTOMER SUPPORT, BGCOMMERCE.tonikroos1, tonikroos1@gmail.com, 1234, tonikroos1@gmail.com, 010-8223-2221, 2020-02-01 00:00:00.0
[TRACE] 11:14:11.748 c.s.bgim.mapper.UserMapper.userList - <==        Row: null, null, null, null, null, null, null, null, null, null, null, Ddal, BGSPACE, ddal1, ASTRONAUT, BGSPACE.ddal1, ddal1@gmail.com, 1234, ddal1@gmail.com, 010-1111-2299, 2011-04-01 00:00:00.0
[TRACE] 11:14:11.750 c.s.bgim.mapper.UserMapper.userList - <==        Row: 0, null, null, null, null, null, null, null, 2020-10-06 16:25:58.0, 2020-10-20 16:22:02.0, null, Hoxy, BGSPACE, hoxy000, testdept, BGSPACE.hoxy000, hoxy000@gmail.com, 1234, null, null, null
[INFO ] 11:14:11.756 jdbc.resultsettable - 
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|user_id |domain_id |dept_id |hr_group_id |hr_sync |hr_sync_group |status |is_valid |create_dt             |modify_dt             |pwd_dt                |username   |companycode |empid      |deptcode         |code                  |login_id             |pwd  |email                |mobile        |hired_dt              |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|10      |1         |10      |10          |1       |1             |sync   |Y        |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |toni kroos |BGCOMMERCE  |tonikroos1 |CUSTOMER SUPPORT |BGCOMMERCE.tonikroos1 |tonikroos1@gmail.com |1234 |tonikroos1@gmail.com |010-8223-2221 |2020-02-01 00:00:00.0 |
|[null]  |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |[null]                |[null]                |[null]                |Ddal       |BGSPACE     |ddal1      |ASTRONAUT        |BGSPACE.ddal1         |ddal1@gmail.com      |1234 |ddal1@gmail.com      |010-1111-2299 |2011-04-01 00:00:00.0 |
|0       |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |2020-10-06 16:25:58.0 |2020-10-20 16:22:02.0 |[null]                |Hoxy       |BGSPACE     |hoxy000    |testdept         |BGSPACE.hoxy000       |hoxy000@gmail.com    |1234 |[null]               |[null]        |[null]                |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|

[DEBUG] 11:14:11.756 c.s.bgim.mapper.UserMapper.userList - <==      Total: 3
[DEBUG] 11:14:34.645 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:14:34.646 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:14:34.646 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:14:34.647 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:14:34.648 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:14:34.648 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:14:34.650 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:14:34.651 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:14:34.652 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:14:34.653 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:14:34.653 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:14:34.654 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:14:34.654 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:14:34.655 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:14:34.655 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:14:34.655 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:14:38.135 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:14:38.138 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:14:38.138 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:14:38.140 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:14:38.140 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:14:38.142 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:14:38.142 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:14:40.043 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:14:40.043 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:14:40.044 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:14:40.048 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:14:40.049 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:14:40.051 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:14:40.051 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:14:40.052 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:14:40.052 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:14:40.053 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:14:40.054 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:14:40.055 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:14:40.056 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:14:40.056 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:14:42.643 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:14:42.644 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:14:42.644 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:14:42.644 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:14:42.644 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:14:42.645 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:14:42.646 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:14:42.647 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:14:42.648 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:14:42.648 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:14:42.648 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:14:42.650 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:14:42.650 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:14:42.651 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:14:42.652 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:14:42.652 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:14:57.762 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:14:57.763 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:14:57.763 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:14:57.764 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:14:57.764 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:14:57.766 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:14:57.766 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:15:01.068 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:15:01.069 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:15:01.069 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:15:01.071 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:15:01.071 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:15:01.072 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:15:01.072 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:15:01.073 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:15:01.073 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:15:01.073 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:15:01.074 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:15:01.075 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:15:01.075 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:15:01.076 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:19:32.172 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:19:32.173 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:19:32.173 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:19:32.174 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:19:32.175 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:19:32.175 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:19:32.175 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:19:32.176 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:19:32.176 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:19:32.176 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:19:32.178 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:19:32.178 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:19:32.180 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:19:32.180 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:19:35.070 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 11:19:35.071 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 11:19:35.071 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 11:19:35.088 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 11:19:35.089 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 11:19:35.089 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 11:19:35.089 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 11:19:35.100 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 11:19:35.100 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 11:19:35.100 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 11:19:35.101 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 11:19:36.185 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 11:19:36.187 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:19:36.187 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:19:36.192 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:19:36.193 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:19:36.194 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:19:36.195 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:19:36.197 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 11:19:36.197 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:19:36.197 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:19:36.200 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:19:36.200 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:19:36.200 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:19:36.200 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:19:38.595 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 11:19:38.596 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 11:19:38.596 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 11:19:38.601 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 11:19:38.602 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 11:19:38.602 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 11:19:38.602 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 11:19:38.603 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 11:19:38.603 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 11:19:38.604 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 11:19:38.604 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 11:19:38.628 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:19:38.628 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:19:38.628 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:19:38.631 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:19:38.631 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:19:38.631 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:19:38.632 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:19:38.632 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:19:38.633 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:19:38.634 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:19:38.634 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:19:38.636 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:19:38.636 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:19:38.637 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:19:38.638 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:19:38.638 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:20:27.851 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:20:27.851 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:20:27.851 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:20:27.852 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:20:27.853 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:20:27.853 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:20:27.853 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:21:18.152 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:21:18.152 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:21:18.153 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:21:18.154 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:21:18.154 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:21:18.154 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:21:18.154 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:21:18.155 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:21:18.155 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:21:18.155 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:21:18.156 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:21:18.156 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:21:18.156 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:21:18.156 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[INFO ] 11:22:33.751 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 18684 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:22:33.754 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:22:33.754 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:22:36.052 com.system.bgim.BgimApplication - Started BgimApplication in 2.794 seconds (JVM running for 3.671)
[INFO ] 11:22:36.054 com.system.bgim.AppRunner - ===========
[INFO ] 11:22:36.055 com.system.bgim.AppRunner - logger.info
[INFO ] 11:22:36.055 com.system.bgim.AppRunner - ===========
[TRACE] 11:22:36.055 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:22:36.055 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:22:36.055 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:22:36.055 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:22:36.055 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:22:36.056 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:22:37.103 c.s.bgim.mapper.UserMapper.userList - ==>  Preparing: SELECT * FROM org_user 
[DEBUG] 11:22:37.206 c.s.bgim.mapper.UserMapper.userList - ==> Parameters: 
[INFO ] 11:22:37.207 jdbc.sqlonly - SELECT * FROM org_user

[TRACE] 11:22:37.313 c.s.bgim.mapper.UserMapper.userList - <==    Columns: USER_ID, DOMAIN_ID, DEPT_ID, HR_GROUP_ID, HR_SYNC, HR_SYNC_GROUP, STATUS, IS_VALID, CREATE_DT, MODIFY_DT, PWD_DT, USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, PWD, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:22:37.320 c.s.bgim.mapper.UserMapper.userList - <==        Row: 10, 1, 10, 10, 1, 1, sync, Y, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, toni kroos, BGCOMMERCE, tonikroos1, CUSTOMER SUPPORT, BGCOMMERCE.tonikroos1, tonikroos1@gmail.com, 1234, tonikroos1@gmail.com, 010-8223-2221, 2020-02-01 00:00:00.0
[TRACE] 11:22:37.324 c.s.bgim.mapper.UserMapper.userList - <==        Row: null, null, null, null, null, null, null, null, null, null, null, Ddal, BGSPACE, ddal1, ASTRONAUT, BGSPACE.ddal1, ddal1@gmail.com, 1234, ddal1@gmail.com, 010-1111-2299, 2011-04-01 00:00:00.0
[TRACE] 11:22:37.325 c.s.bgim.mapper.UserMapper.userList - <==        Row: 0, null, null, null, null, null, null, null, 2020-10-06 16:25:58.0, 2020-10-21 11:19:35.0, null, Hoxy, BGSPACE, hoxy000, testdept, BGSPACE.hoxy000, hoxy000@gmail.com, 1234, null, null, null
[INFO ] 11:22:37.331 jdbc.resultsettable - 
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|user_id |domain_id |dept_id |hr_group_id |hr_sync |hr_sync_group |status |is_valid |create_dt             |modify_dt             |pwd_dt                |username   |companycode |empid      |deptcode         |code                  |login_id             |pwd  |email                |mobile        |hired_dt              |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|10      |1         |10      |10          |1       |1             |sync   |Y        |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |toni kroos |BGCOMMERCE  |tonikroos1 |CUSTOMER SUPPORT |BGCOMMERCE.tonikroos1 |tonikroos1@gmail.com |1234 |tonikroos1@gmail.com |010-8223-2221 |2020-02-01 00:00:00.0 |
|[null]  |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |[null]                |[null]                |[null]                |Ddal       |BGSPACE     |ddal1      |ASTRONAUT        |BGSPACE.ddal1         |ddal1@gmail.com      |1234 |ddal1@gmail.com      |010-1111-2299 |2011-04-01 00:00:00.0 |
|0       |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |2020-10-06 16:25:58.0 |2020-10-21 11:19:35.0 |[null]                |Hoxy       |BGSPACE     |hoxy000    |testdept         |BGSPACE.hoxy000       |hoxy000@gmail.com    |1234 |[null]               |[null]        |[null]                |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|

[DEBUG] 11:22:37.332 c.s.bgim.mapper.UserMapper.userList - <==      Total: 3
[DEBUG] 11:22:45.421 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:22:45.422 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:22:45.422 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:22:45.423 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:22:45.424 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:22:45.424 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:22:45.424 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:22:45.424 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:22:45.425 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:22:45.426 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:22:45.427 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:22:45.429 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:22:45.430 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:22:45.430 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:22:45.431 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:22:45.431 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:22:48.939 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:22:48.944 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:22:48.944 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:22:48.946 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:22:48.946 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:22:48.948 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:22:48.948 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:22:51.824 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:22:51.825 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:22:51.825 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:22:51.826 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:22:51.826 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:22:51.828 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:22:51.828 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:22:51.829 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:22:51.829 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:22:51.829 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:22:51.830 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:22:51.830 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:22:51.830 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:22:51.831 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:22:55.069 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:22:55.070 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:22:55.070 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:22:55.071 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:22:55.071 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:22:55.072 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:22:55.073 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:22:55.073 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:22:55.074 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:22:55.074 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:22:55.074 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:22:55.076 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:22:55.076 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:22:55.077 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:22:55.077 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:22:55.077 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:23:16.543 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:23:16.543 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:23:16.543 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:23:16.544 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:23:16.545 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:23:16.546 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:23:16.547 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:25:35.008 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 21688 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:25:35.011 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:25:35.012 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:25:37.090 com.system.bgim.BgimApplication - Started BgimApplication in 2.569 seconds (JVM running for 3.781)
[INFO ] 11:25:37.092 com.system.bgim.AppRunner - ===========
[INFO ] 11:25:37.092 com.system.bgim.AppRunner - logger.info
[INFO ] 11:25:37.092 com.system.bgim.AppRunner - ===========
[TRACE] 11:25:37.092 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:25:37.093 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:25:37.093 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:25:37.093 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:25:37.093 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:25:37.093 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:25:38.077 c.s.bgim.mapper.UserMapper.userList - ==>  Preparing: SELECT * FROM org_user 
[DEBUG] 11:25:38.223 c.s.bgim.mapper.UserMapper.userList - ==> Parameters: 
[INFO ] 11:25:38.224 jdbc.sqlonly - SELECT * FROM org_user

[TRACE] 11:25:38.338 c.s.bgim.mapper.UserMapper.userList - <==    Columns: USER_ID, DOMAIN_ID, DEPT_ID, HR_GROUP_ID, HR_SYNC, HR_SYNC_GROUP, STATUS, IS_VALID, CREATE_DT, MODIFY_DT, PWD_DT, USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, PWD, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:25:38.341 c.s.bgim.mapper.UserMapper.userList - <==        Row: 10, 1, 10, 10, 1, 1, sync, Y, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, toni kroos, BGCOMMERCE, tonikroos1, CUSTOMER SUPPORT, BGCOMMERCE.tonikroos1, tonikroos1@gmail.com, 1234, tonikroos1@gmail.com, 010-8223-2221, 2020-02-01 00:00:00.0
[TRACE] 11:25:38.345 c.s.bgim.mapper.UserMapper.userList - <==        Row: null, null, null, null, null, null, null, null, null, null, null, Ddal, BGSPACE, ddal1, ASTRONAUT, BGSPACE.ddal1, ddal1@gmail.com, 1234, ddal1@gmail.com, 010-1111-2299, 2011-04-01 00:00:00.0
[TRACE] 11:25:38.346 c.s.bgim.mapper.UserMapper.userList - <==        Row: 0, null, null, null, null, null, null, null, 2020-10-06 16:25:58.0, 2020-10-21 11:19:35.0, null, Hoxy, BGSPACE, hoxy000, testdept, BGSPACE.hoxy000, hoxy000@gmail.com, 1234, null, null, null
[INFO ] 11:25:38.356 jdbc.resultsettable - 
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|user_id |domain_id |dept_id |hr_group_id |hr_sync |hr_sync_group |status |is_valid |create_dt             |modify_dt             |pwd_dt                |username   |companycode |empid      |deptcode         |code                  |login_id             |pwd  |email                |mobile        |hired_dt              |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|10      |1         |10      |10          |1       |1             |sync   |Y        |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |toni kroos |BGCOMMERCE  |tonikroos1 |CUSTOMER SUPPORT |BGCOMMERCE.tonikroos1 |tonikroos1@gmail.com |1234 |tonikroos1@gmail.com |010-8223-2221 |2020-02-01 00:00:00.0 |
|[null]  |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |[null]                |[null]                |[null]                |Ddal       |BGSPACE     |ddal1      |ASTRONAUT        |BGSPACE.ddal1         |ddal1@gmail.com      |1234 |ddal1@gmail.com      |010-1111-2299 |2011-04-01 00:00:00.0 |
|0       |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |2020-10-06 16:25:58.0 |2020-10-21 11:19:35.0 |[null]                |Hoxy       |BGSPACE     |hoxy000    |testdept         |BGSPACE.hoxy000       |hoxy000@gmail.com    |1234 |[null]               |[null]        |[null]                |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|

[DEBUG] 11:25:38.357 c.s.bgim.mapper.UserMapper.userList - <==      Total: 3
[DEBUG] 11:25:39.195 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:25:39.202 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:25:39.202 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:25:39.204 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:25:39.204 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:25:39.207 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:25:39.207 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:25:39.208 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:25:39.209 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:25:39.209 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:25:39.210 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:25:39.211 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:25:39.211 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:25:39.211 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:25:46.921 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:25:46.922 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:25:46.922 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:25:46.925 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:25:46.925 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:25:46.926 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:25:46.926 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:25:46.926 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:25:46.928 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:25:46.929 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:25:46.929 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:25:46.932 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:25:46.932 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:25:46.932 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:25:46.933 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:25:46.933 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:25:49.814 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:25:49.815 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:25:49.815 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:25:49.816 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:25:49.816 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:25:49.818 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:25:49.818 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:26:12.399 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:26:12.401 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:26:12.401 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:26:12.403 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:26:12.403 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:26:12.404 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:26:12.405 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:26:12.405 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:26:12.405 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:26:12.405 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:26:12.406 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:26:12.406 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:26:12.407 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:26:12.407 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:26:12.407 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:26:12.407 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[INFO ] 11:34:37.286 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 23652 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:34:37.290 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:34:37.290 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:34:39.036 com.system.bgim.BgimApplication - Started BgimApplication in 2.15 seconds (JVM running for 3.057)
[INFO ] 11:34:39.039 com.system.bgim.AppRunner - ===========
[INFO ] 11:34:39.039 com.system.bgim.AppRunner - logger.info
[INFO ] 11:34:39.039 com.system.bgim.AppRunner - ===========
[TRACE] 11:34:39.039 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:34:39.039 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:34:39.039 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:34:39.039 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:34:39.039 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:34:39.040 com.system.bgim.AppRunner - slf4j since 20201012
[INFO ] 11:35:13.323 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 26824 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:35:13.325 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:35:13.326 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:35:15.046 com.system.bgim.BgimApplication - Started BgimApplication in 2.143 seconds (JVM running for 3.004)
[INFO ] 11:35:15.048 com.system.bgim.AppRunner - ===========
[INFO ] 11:35:15.048 com.system.bgim.AppRunner - logger.info
[INFO ] 11:35:15.048 com.system.bgim.AppRunner - ===========
[TRACE] 11:35:15.048 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:35:15.048 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:35:15.048 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:35:15.048 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:35:15.048 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:35:15.049 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:35:58.681 c.s.bgim.mapper.UserMapper.userList - ==>  Preparing: SELECT * FROM org_user 
[DEBUG] 11:35:58.770 c.s.bgim.mapper.UserMapper.userList - ==> Parameters: 
[INFO ] 11:35:58.770 jdbc.sqlonly - SELECT * FROM org_user

[TRACE] 11:35:58.857 c.s.bgim.mapper.UserMapper.userList - <==    Columns: USER_ID, DOMAIN_ID, DEPT_ID, HR_GROUP_ID, HR_SYNC, HR_SYNC_GROUP, STATUS, IS_VALID, CREATE_DT, MODIFY_DT, PWD_DT, USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, PWD, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:35:58.860 c.s.bgim.mapper.UserMapper.userList - <==        Row: 10, 1, 10, 10, 1, 1, sync, Y, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, toni kroos, BGCOMMERCE, tonikroos1, CUSTOMER SUPPORT, BGCOMMERCE.tonikroos1, tonikroos1@gmail.com, 1234, tonikroos1@gmail.com, 010-8223-2221, 2020-02-01 00:00:00.0
[TRACE] 11:35:58.863 c.s.bgim.mapper.UserMapper.userList - <==        Row: null, null, null, null, null, null, null, null, null, null, null, Ddal, BGSPACE, ddal1, ASTRONAUT, BGSPACE.ddal1, ddal1@gmail.com, 1234, ddal1@gmail.com, 010-1111-2299, 2011-04-01 00:00:00.0
[TRACE] 11:35:58.864 c.s.bgim.mapper.UserMapper.userList - <==        Row: 0, null, null, null, null, null, null, null, 2020-10-06 16:25:58.0, 2020-10-21 11:19:35.0, null, Hoxy, BGSPACE, hoxy000, testdept, BGSPACE.hoxy000, hoxy000@gmail.com, 1234, null, null, null
[INFO ] 11:35:58.871 jdbc.resultsettable - 
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|user_id |domain_id |dept_id |hr_group_id |hr_sync |hr_sync_group |status |is_valid |create_dt             |modify_dt             |pwd_dt                |username   |companycode |empid      |deptcode         |code                  |login_id             |pwd  |email                |mobile        |hired_dt              |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|10      |1         |10      |10          |1       |1             |sync   |Y        |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |toni kroos |BGCOMMERCE  |tonikroos1 |CUSTOMER SUPPORT |BGCOMMERCE.tonikroos1 |tonikroos1@gmail.com |1234 |tonikroos1@gmail.com |010-8223-2221 |2020-02-01 00:00:00.0 |
|[null]  |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |[null]                |[null]                |[null]                |Ddal       |BGSPACE     |ddal1      |ASTRONAUT        |BGSPACE.ddal1         |ddal1@gmail.com      |1234 |ddal1@gmail.com      |010-1111-2299 |2011-04-01 00:00:00.0 |
|0       |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |2020-10-06 16:25:58.0 |2020-10-21 11:19:35.0 |[null]                |Hoxy       |BGSPACE     |hoxy000    |testdept         |BGSPACE.hoxy000       |hoxy000@gmail.com    |1234 |[null]               |[null]        |[null]                |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|

[DEBUG] 11:35:59.148 c.s.bgim.mapper.UserMapper.userList - <==      Total: 3
[DEBUG] 11:36:15.062 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:36:15.063 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:36:15.064 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:36:15.065 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:36:15.066 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:36:15.066 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:36:15.067 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:36:15.067 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:36:15.067 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:36:15.067 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:36:15.068 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:36:15.069 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:36:15.069 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:36:15.069 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:36:15.069 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:36:15.069 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:36:25.245 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:36:25.246 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:36:25.246 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:36:25.249 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:36:25.249 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:36:25.249 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:36:25.250 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:36:25.250 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:36:25.251 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:36:25.251 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:36:25.252 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:36:25.253 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:36:25.253 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:36:25.254 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:36:25.255 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:36:25.256 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:36:27.919 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:36:27.923 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:36:27.924 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:36:27.925 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:36:27.926 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:36:27.927 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:36:27.927 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:36:35.186 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:36:35.187 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:36:35.187 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:36:35.189 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:36:35.190 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:36:35.193 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:36:35.194 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:36:35.195 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:36:35.196 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:36:35.196 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:36:35.197 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:36:35.199 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:36:35.201 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:36:35.201 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:36:39.482 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:36:39.482 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:36:39.482 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:36:39.483 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:36:39.483 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:36:39.484 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:36:39.485 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:36:39.485 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:36:39.486 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:36:39.486 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:36:39.487 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:36:39.488 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:36:39.488 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:36:39.489 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:36:39.490 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:36:39.490 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:36:45.235 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:36:45.236 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:36:45.236 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:36:45.237 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:36:45.237 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:36:45.238 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:36:45.238 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:39:24.621 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 21156 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:39:24.623 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:39:24.623 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:39:26.241 com.system.bgim.BgimApplication - Started BgimApplication in 1.967 seconds (JVM running for 2.834)
[INFO ] 11:39:26.242 com.system.bgim.AppRunner - ===========
[INFO ] 11:39:26.243 com.system.bgim.AppRunner - logger.info
[INFO ] 11:39:26.243 com.system.bgim.AppRunner - ===========
[TRACE] 11:39:26.243 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:39:26.243 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:39:26.243 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:39:26.243 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:39:26.243 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:39:26.243 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:39:35.239 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:39:35.344 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:39:35.344 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:39:35.440 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:39:35.440 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:39:35.442 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:39:35.444 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:39:35.444 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:39:35.449 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:39:35.449 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:39:35.449 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:39:35.451 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:39:35.452 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:39:35.453 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:39:35.456 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:39:35.456 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:39:36.213 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:39:36.220 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:39:36.220 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:39:36.228 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:39:36.234 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:39:36.239 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:39:36.239 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:39:36.240 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:39:36.241 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:39:36.241 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:39:36.243 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:39:36.243 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:39:36.244 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:39:36.244 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:39:42.343 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:39:42.344 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:39:42.344 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:39:42.347 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:39:42.347 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:39:42.349 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:39:42.350 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:39:53.331 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:39:53.333 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:39:53.334 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:39:53.336 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:39:53.336 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:39:53.337 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:39:53.337 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:39:53.339 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:39:53.340 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:39:53.340 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:39:53.342 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:39:53.342 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:39:53.344 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:39:53.345 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:39:56.048 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:39:56.049 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:39:56.049 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:39:56.050 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:39:56.051 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:39:56.051 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:39:56.052 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:39:56.052 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:39:56.053 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:39:56.053 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:39:56.054 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:39:56.055 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:39:56.055 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:39:56.056 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:39:56.056 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:39:56.057 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[INFO ] 11:40:32.385 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 21784 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:40:32.387 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:40:32.388 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:40:34.235 com.system.bgim.BgimApplication - Started BgimApplication in 2.274 seconds (JVM running for 3.266)
[INFO ] 11:40:34.238 com.system.bgim.AppRunner - ===========
[INFO ] 11:40:34.238 com.system.bgim.AppRunner - logger.info
[INFO ] 11:40:34.238 com.system.bgim.AppRunner - ===========
[TRACE] 11:40:34.238 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:40:34.238 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:40:34.238 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:40:34.238 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:40:34.238 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:40:34.239 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:40:35.106 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:40:35.195 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:40:35.195 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:40:35.278 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:40:35.279 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:40:35.281 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:40:35.281 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:40:35.282 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:40:35.287 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:40:35.288 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:40:35.288 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:40:35.289 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:40:35.289 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:40:35.290 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:40:35.291 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:40:35.292 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:40:42.729 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:40:42.733 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:40:42.733 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:40:42.736 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:40:42.737 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:40:42.740 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:40:42.740 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:42:34.878 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 16108 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:42:34.880 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:42:34.881 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:42:36.825 com.system.bgim.BgimApplication - Started BgimApplication in 2.446 seconds (JVM running for 3.493)
[INFO ] 11:42:36.827 com.system.bgim.AppRunner - ===========
[INFO ] 11:42:36.828 com.system.bgim.AppRunner - logger.info
[INFO ] 11:42:36.828 com.system.bgim.AppRunner - ===========
[TRACE] 11:42:36.828 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:42:36.828 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:42:36.828 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:42:36.828 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:42:36.828 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:42:36.829 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:42:58.442 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:42:58.567 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:42:58.567 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:42:58.685 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:42:58.685 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:42:58.688 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:42:58.690 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:42:58.691 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:42:58.701 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:42:58.701 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:42:58.701 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:42:58.703 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:42:58.703 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:42:58.703 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:42:58.704 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:42:58.704 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:42:59.766 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:42:59.772 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:42:59.772 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:42:59.783 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:42:59.787 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:42:59.794 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:42:59.794 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:42:59.795 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:42:59.796 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:42:59.796 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:42:59.798 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:42:59.798 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:42:59.799 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:42:59.799 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:43:04.056 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:43:04.057 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:43:04.058 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:43:04.062 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:43:04.062 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:43:04.066 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:43:04.066 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:43:40.733 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 20664 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:43:40.735 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:43:40.735 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:43:42.748 com.system.bgim.BgimApplication - Started BgimApplication in 2.466 seconds (JVM running for 3.536)
[INFO ] 11:43:42.750 com.system.bgim.AppRunner - ===========
[INFO ] 11:43:42.750 com.system.bgim.AppRunner - logger.info
[INFO ] 11:43:42.750 com.system.bgim.AppRunner - ===========
[TRACE] 11:43:42.750 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:43:42.750 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:43:42.750 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:43:42.751 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:43:42.751 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:43:42.751 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:43:43.694 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:43:43.834 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:43:43.834 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:43:43.963 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:43:43.963 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:43:43.965 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:43:43.966 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:43:43.966 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:43:43.977 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:43:43.977 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:43:43.977 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:43:43.979 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:43:43.979 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:43:43.979 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:43:43.980 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:43:43.981 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:43:44.782 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:43:44.790 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:43:44.791 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:43:44.800 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:43:44.805 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:43:44.809 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:43:44.809 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:43:44.810 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:43:44.811 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:43:44.811 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:43:44.812 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:43:44.813 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:43:44.814 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:43:44.814 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:43:50.013 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:43:50.014 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:43:50.014 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:43:50.017 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:43:50.017 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:43:50.020 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:43:50.020 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:46:46.619 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 30768 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:46:46.622 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:46:46.624 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:46:48.670 com.system.bgim.BgimApplication - Started BgimApplication in 2.504 seconds (JVM running for 3.53)
[INFO ] 11:46:48.672 com.system.bgim.AppRunner - ===========
[INFO ] 11:46:48.672 com.system.bgim.AppRunner - logger.info
[INFO ] 11:46:48.672 com.system.bgim.AppRunner - ===========
[TRACE] 11:46:48.673 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:46:48.673 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:46:48.673 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:46:48.673 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:46:48.673 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:46:48.674 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:47:29.413 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:47:29.527 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:47:29.527 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:47:29.631 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:47:29.632 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:47:29.634 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:47:29.638 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:47:29.639 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:47:29.645 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:47:29.645 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:47:29.645 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:47:29.646 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:47:29.646 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:47:29.647 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:47:29.647 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:47:29.647 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:47:30.448 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:47:30.456 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:47:30.456 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:47:30.464 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:47:30.471 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:47:30.474 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:47:30.475 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:47:30.476 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:47:30.476 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:47:30.477 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:47:30.478 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:47:30.479 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:47:30.479 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:47:30.479 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:47:59.048 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:47:59.049 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:47:59.049 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:47:59.054 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:47:59.054 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:47:59.058 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:47:59.059 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:49:21.334 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 28084 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:49:21.337 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:49:21.338 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:49:23.242 com.system.bgim.BgimApplication - Started BgimApplication in 2.259 seconds (JVM running for 3.099)
[INFO ] 11:49:23.244 com.system.bgim.AppRunner - ===========
[INFO ] 11:49:23.244 com.system.bgim.AppRunner - logger.info
[INFO ] 11:49:23.244 com.system.bgim.AppRunner - ===========
[TRACE] 11:49:23.244 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:49:23.244 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:49:23.244 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:49:23.244 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:49:23.244 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:49:23.245 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:49:25.593 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:49:25.732 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:49:25.732 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:49:25.857 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:49:25.857 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:49:25.858 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:49:25.859 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:49:25.860 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:49:25.865 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:49:25.865 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:49:25.865 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:49:25.866 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:49:25.866 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:49:25.867 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:49:25.869 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:49:25.871 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:49:26.657 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:49:26.663 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:26.664 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:26.674 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:26.679 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:26.684 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:26.685 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:26.686 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:49:26.687 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:26.687 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:26.688 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:26.689 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:26.689 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:26.689 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:31.246 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:49:31.247 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:49:31.247 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:49:31.251 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:49:31.252 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:49:31.254 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:49:31.254 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:49:43.863 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:49:43.864 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:43.865 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:43.866 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:43.866 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:43.866 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:43.867 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:43.867 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:49:43.868 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:43.868 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:43.869 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:43.869 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:43.870 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:43.870 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:48.771 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:49:48.772 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:49:48.772 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:49:48.773 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:49:48.774 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:49:48.776 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:49:48.776 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:49:54.178 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:49:54.179 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:54.180 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:54.181 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:54.181 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:54.181 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:54.182 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:54.182 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:49:54.183 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:54.183 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:54.185 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:54.185 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:54.186 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:54.186 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:57.134 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 11:49:57.135 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 11:49:57.135 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 11:49:57.138 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 11:49:57.140 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 11:49:57.140 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 11:49:57.140 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 11:49:57.141 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 11:49:57.141 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 11:49:57.142 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 11:49:57.142 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 11:49:58.477 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 11:49:58.477 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:58.477 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:58.478 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:58.479 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:58.479 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:58.479 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:58.479 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 11:49:58.480 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:49:58.480 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:49:58.481 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:49:58.482 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:49:58.482 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:49:58.482 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:49:59.572 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 11:49:59.573 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 11:49:59.573 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 11:49:59.574 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:49:59.575 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 11:49:59.575 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 11:49:59.575 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[DEBUG] 11:49:59.575 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 11:49:59.575 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[INFO ] 11:49:59.575 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 11:49:59.576 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 11:49:59.576 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[TRACE] 11:49:59.576 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[INFO ] 11:49:59.576 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 11:49:59.577 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[TRACE] 11:49:59.577 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:49:59.578 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:49:59.578 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:50:18.614 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:50:18.614 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:50:18.614 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:50:18.616 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:50:18.616 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:50:18.617 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:50:18.617 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:50:27.025 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:50:27.026 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:50:27.026 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:50:27.027 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:50:27.028 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:50:27.028 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:50:27.028 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:50:27.029 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:50:27.029 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:50:27.029 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:50:27.030 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:50:27.031 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:50:27.031 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:50:27.031 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:50:29.559 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 11:50:29.560 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 11:50:29.560 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 11:50:29.562 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 11:50:29.562 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 11:50:29.563 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 11:50:29.563 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 11:50:29.564 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 11:50:29.564 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 11:50:29.564 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 11:50:29.564 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 11:50:30.339 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 11:50:30.339 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:50:30.339 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:50:30.340 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:50:30.340 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:50:30.341 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:50:30.341 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:50:30.341 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 11:50:30.342 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:50:30.342 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:50:30.343 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:50:30.343 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:50:30.344 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:50:30.344 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:50:31.295 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 11:50:31.296 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 11:50:31.296 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 11:50:31.298 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:50:31.298 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 11:50:31.298 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:50:31.298 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[DEBUG] 11:50:31.298 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 11:50:31.298 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 11:50:31.299 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 11:50:31.299 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:50:31.300 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[TRACE] 11:50:31.300 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 11:50:31.300 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 11:50:31.300 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 11:50:31.301 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[INFO ] 11:50:31.301 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:50:31.301 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 11:54:43.571 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 23636 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:54:43.575 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:54:43.575 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:54:45.115 com.system.bgim.BgimApplication - Started BgimApplication in 1.891 seconds (JVM running for 2.867)
[INFO ] 11:54:45.116 com.system.bgim.AppRunner - ===========
[INFO ] 11:54:45.117 com.system.bgim.AppRunner - logger.info
[INFO ] 11:54:45.117 com.system.bgim.AppRunner - ===========
[TRACE] 11:54:45.117 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:54:45.117 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:54:45.117 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:54:45.117 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:54:45.117 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:54:45.118 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:54:56.659 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:54:56.745 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:54:56.745 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:54:56.841 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:54:56.842 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:54:56.843 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:54:56.844 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:54:56.844 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:54:56.849 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:54:56.850 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:54:56.851 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:54:56.853 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:54:56.853 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:54:56.854 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:54:56.855 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:54:56.855 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:55:00.118 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:55:00.122 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:55:00.123 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:55:00.126 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:55:00.127 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:55:00.129 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:55:00.129 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 11:55:06.404 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:55:06.405 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:55:06.405 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:55:06.406 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:55:06.407 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:55:06.407 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:55:06.409 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:55:06.409 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:55:06.410 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:55:06.410 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:55:06.410 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:55:06.411 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:55:06.411 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:55:06.412 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 11:55:06.413 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|--------------|---------------|

[DEBUG] 11:55:06.414 c.s.b.mapper.DomainMapper.domainList - <==      Total: 2
[DEBUG] 11:55:06.453 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:55:06.454 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:55:06.454 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:55:06.463 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:55:06.467 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:55:06.471 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:55:06.471 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:55:06.472 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 11:55:06.472 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 11:55:06.472 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 11:55:06.474 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 11:55:06.474 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 11:55:06.475 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 11:55:06.475 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 11:55:08.320 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 11:55:08.320 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 11:55:08.320 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 11:55:08.321 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 11:55:08.322 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 11:55:08.323 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 11:55:08.324 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:00:12.644 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:00:12.652 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:00:12.652 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:00:12.665 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:00:12.665 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:00:12.666 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:00:12.667 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:00:12.667 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:00:12.668 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:00:12.669 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:00:12.669 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:00:12.669 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:00:12.670 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:00:12.670 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:00:12.670 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:00:12.671 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:00:12.671 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:00:12.671 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:00:20.804 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:00:20.804 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:00:20.805 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:00:20.805 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:00:20.806 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:00:20.806 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:00:20.809 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:00:20.809 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:00:20.810 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:00:20.811 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:00:20.812 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:00:20.812 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:00:20.813 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:00:20.813 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:00:20.813 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:00:20.813 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:00:20.814 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:00:20.814 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:00:23.315 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:00:23.316 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:00:23.316 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:00:23.318 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:00:23.318 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:00:23.318 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:00:23.318 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:00:23.319 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:00:23.319 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:00:23.320 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:00:23.321 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:00:23.321 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:00:23.321 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:00:23.322 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:00:23.322 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:00:23.322 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:00:23.322 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:00:23.322 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:00:25.435 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:00:25.436 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGAGRICULTURE(String)
[INFO ] 16:00:25.436 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGAGRICULTURE'

[INFO ] 16:00:25.443 jdbc.resultsettable - 
|---------|------------|------|---------|-----|---------|------|-------|---------|
|username |companycode |empid |deptcode |code |login_id |email |mobile |hired_dt |
|---------|------------|------|---------|-----|---------|------|-------|---------|
|---------|------------|------|---------|-----|---------|------|-------|---------|

[DEBUG] 16:00:25.443 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 0
[DEBUG] 16:01:10.499 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:01:10.500 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:01:10.500 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:01:10.502 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:01:10.503 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:01:10.504 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:01:10.505 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:01:14.205 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:01:14.207 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:01:14.208 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:01:14.214 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:01:14.214 c.s.b.m.UserMapper.countUserService - <==        Row: 0
[INFO ] 16:01:14.215 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|0        |
|---------|

[DEBUG] 16:01:14.215 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:01:14.216 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:01:14.216 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:01:14.216 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:01:14.218 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:01:14.219 c.s.b.m.UserMapper.countUserService - <==        Row: 0
[INFO ] 16:01:14.220 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|0        |
|---------|

[DEBUG] 16:01:14.220 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:01:53.596 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:01:53.597 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:01:53.597 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:01:53.598 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:01:53.598 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:01:53.599 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:01:53.599 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:02:00.141 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:02:00.142 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:02:00.142 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:02:00.144 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:02:00.144 c.s.b.m.UserMapper.countUserService - <==        Row: 0
[INFO ] 16:02:00.144 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|0        |
|---------|

[DEBUG] 16:02:00.144 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:02:00.145 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:02:00.146 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:02:00.147 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:02:00.150 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:02:00.151 c.s.b.m.UserMapper.countUserService - <==        Row: 0
[INFO ] 16:02:00.151 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|0        |
|---------|

[DEBUG] 16:02:00.151 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:02:13.296 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:02:13.297 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:02:13.297 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:02:13.304 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:02:13.304 c.s.b.m.UserMapper.countUserService - <==        Row: 0
[INFO ] 16:02:13.304 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|0        |
|---------|

[DEBUG] 16:02:13.304 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:02:13.305 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:02:13.306 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:02:13.307 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:02:13.309 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:02:13.309 c.s.b.m.UserMapper.countUserService - <==        Row: 0
[INFO ] 16:02:13.309 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|0        |
|---------|

[DEBUG] 16:02:13.309 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:02:13.315 c.s.b.mapper.UserMapper.userInsert - ==>  Preparing: INSERT INTO org_user (code,username,pwd,login_id,create_dt,modify_dt,user_id,empid,companycode,deptcode) VALUES(?,?,?,?,SYSDATE,SYSDATE,0,?,?,?) 
[DEBUG] 16:02:13.316 c.s.b.mapper.UserMapper.userInsert - ==> Parameters: BGCOMMERCE.stevie5(String), Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String)
[INFO ] 16:02:13.316 jdbc.sqlonly - INSERT INTO
        org_user        

				(code,username,pwd,login_id,create_dt,modify_dt,user_id,empid,companycode,deptcode)
	       		 VALUES('BGCOMMERCE.stevie5','Stevie','1234','stevie5@gmail.com',SYSDATE,SYSDATE,0,'stevie5','BGCOMMERCE','testdept')

[DEBUG] 16:02:13.330 c.s.b.mapper.UserMapper.userInsert - <==    Updates: 1
[DEBUG] 16:02:13.332 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 16:02:13.332 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:02:13.332 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 16:02:13.337 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:02:13.337 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 16:02:13.338 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 16:02:13.338 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:02:14.673 c.s.b.mapper.UserMapper.userInsert - ==>  Preparing: INSERT INTO mall_user (code,username,pwd,login_id,empid,companycode,deptcode) VALUES(?,?,?,?,?,?,?) 
[DEBUG] 16:02:14.674 c.s.b.mapper.UserMapper.userInsert - ==> Parameters: BGCOMMERCE.stevie5(String), Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String)
[INFO ] 16:02:14.674 jdbc.sqlonly - INSERT INTO
        mall_user        

				(code,username,pwd,login_id,empid,companycode,deptcode)
	      		  VALUES('BGCOMMERCE.stevie5','Stevie','1234','stevie5@gmail.com','stevie5','BGCOMMERCE','testdept')

[DEBUG] 16:02:14.676 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:02:14.677 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:02:14.677 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[DEBUG] 16:02:14.678 c.s.b.mapper.UserMapper.userInsert - <==    Updates: 1
[TRACE] 16:02:14.678 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:02:14.678 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[DEBUG] 16:02:14.678 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 16:02:14.679 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:02:14.679 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[INFO ] 16:02:14.679 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:02:14.679 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[TRACE] 16:02:14.680 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:02:14.680 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 16:02:14.680 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 16:02:14.680 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:09:15.844 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:09:15.845 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:09:15.845 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:09:15.849 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:09:15.849 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:09:15.850 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:09:15.850 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:09:15.851 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:09:15.851 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:09:15.851 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:09:15.853 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:09:15.853 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:09:15.853 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:09:15.854 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:10:36.330 c.s.b.mapper.UserMapper.userInsert - ==>  Preparing: INSERT INTO org_user (code,username,pwd,login_id,create_dt,modify_dt,user_id,empid,companycode,deptcode) VALUES(?,?,?,?,SYSDATE,SYSDATE,0,?,?,?) 
[DEBUG] 16:10:36.330 c.s.b.mapper.UserMapper.userInsert - ==> Parameters: BGCOMMERCE.stevie5(String), Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String)
[INFO ] 16:10:36.331 jdbc.sqlonly - INSERT INTO
        org_user        

				(code,username,pwd,login_id,create_dt,modify_dt,user_id,empid,companycode,deptcode)
	       		 VALUES('BGCOMMERCE.stevie5','Stevie','1234','stevie5@gmail.com',SYSDATE,SYSDATE,0,'stevie5','BGCOMMERCE','testdept')

[DEBUG] 16:10:36.335 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:10:36.336 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:10:36.336 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:10:36.337 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:10:36.337 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:10:36.338 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:10:36.338 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:10:36.339 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:10:36.340 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:10:36.340 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:10:36.341 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:10:36.341 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:10:36.341 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:10:36.341 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[ERROR] 16:10:36.362 jdbc.sqlonly - 81. PreparedStatement.execute() INSERT INTO
        org_user        

				(code,username,pwd,login_id,create_dt,modify_dt,user_id,empid,companycode,deptcode)
	       		 VALUES('BGCOMMERCE.stevie5','Stevie','1234','stevie5@gmail.com',SYSDATE,SYSDATE,0,'stevie5','BGCOMMERCE','testdept')

java.sql.SQLIntegrityConstraintViolationException: ORA-00001: 무결성 제약 조건(IM.USER_PK)에 위배됩니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy68.userInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.userInsert(Unknown Source)
	at com.system.bgim.service.UserService.userInsertService(UserService.java:37)
	at com.system.bgim.controller.UserController.userInsertProc(UserController.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00001: 무결성 제약 조건(IM.USER_PK)에 위배됩니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 101 common frames omitted
[DEBUG] 16:12:28.188 c.s.b.mapper.UserMapper.userInsert - ==>  Preparing: INSERT INTO mall_user (code,username,pwd,login_id,empid,companycode,deptcode) VALUES(?,?,?,?,?,?,?) 
[DEBUG] 16:12:28.189 c.s.b.mapper.UserMapper.userInsert - ==> Parameters: BGCOMMERCE.stevie5(String), Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String)
[INFO ] 16:12:28.189 jdbc.sqlonly - INSERT INTO
        mall_user        

				(code,username,pwd,login_id,empid,companycode,deptcode)
	      		  VALUES('BGCOMMERCE.stevie5','Stevie','1234','stevie5@gmail.com','stevie5','BGCOMMERCE','testdept')

[DEBUG] 16:12:28.189 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:12:28.189 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:12:28.189 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:12:28.190 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:12:28.191 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:12:28.193 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:12:28.193 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[ERROR] 16:12:28.196 jdbc.sqlonly - 81. PreparedStatement.execute() INSERT INTO
        mall_user        

				(code,username,pwd,login_id,empid,companycode,deptcode)
	      		  VALUES('BGCOMMERCE.stevie5','Stevie','1234','stevie5@gmail.com','stevie5','BGCOMMERCE','testdept')

java.sql.SQLIntegrityConstraintViolationException: ORA-00001: 무결성 제약 조건(IM.MALL_USER_PK)에 위배됩니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy68.userInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy69.userInsert(Unknown Source)
	at com.system.bgim.service.UserService.userInsertService(UserService.java:37)
	at com.system.bgim.controller.UserController.userInsertProc(UserController.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00001: 무결성 제약 조건(IM.MALL_USER_PK)에 위배됩니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 101 common frames omitted
[DEBUG] 16:12:30.588 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:12:30.589 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:12:30.589 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:12:30.591 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:12:30.591 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:12:30.591 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:12:30.591 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:12:30.592 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:12:30.592 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:12:30.593 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:12:30.594 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:12:30.594 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:12:30.595 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:12:30.595 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:12:33.257 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:12:33.257 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:12:33.258 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:12:33.264 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:12:33.264 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 16:12:33.265 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:12:33.265 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 16:12:33.267 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:12:33.267 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 16:12:33.267 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 16:12:33.267 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:12:34.567 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:12:34.567 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:12:34.567 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:12:34.568 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:12:34.568 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:12:34.568 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:12:34.568 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:12:34.569 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:12:34.569 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:12:34.570 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:12:34.570 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:12:34.571 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:12:34.571 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:12:34.571 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:12:36.522 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:12:36.523 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:12:36.523 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:12:36.525 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:12:36.526 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:12:36.526 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[DEBUG] 16:12:36.527 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[TRACE] 16:12:36.528 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:12:36.528 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[DEBUG] 16:12:36.528 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 16:12:36.528 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:12:36.529 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[INFO ] 16:12:36.529 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:12:36.529 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[TRACE] 16:12:36.530 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:12:36.530 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 16:12:36.530 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 16:12:36.530 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:13:56.540 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:13:56.541 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:13:56.541 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:13:56.542 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:13:56.542 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:13:56.542 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:13:56.542 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:13:56.543 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:13:56.543 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:13:56.543 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:13:56.544 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:13:56.544 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:13:56.544 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:13:56.544 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:13:58.919 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:13:58.919 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:13:58.919 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:13:58.922 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:13:58.923 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 16:13:58.923 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:13:58.923 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 16:13:58.924 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:13:58.924 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 16:13:58.924 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 16:13:58.925 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:14:00.035 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:14:00.036 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:14:00.036 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:14:00.037 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:14:00.037 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:14:00.037 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:14:00.037 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:14:00.038 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:14:00.038 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:14:00.038 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:14:00.039 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:14:00.040 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:14:00.040 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:14:00.040 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:14:01.030 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:14:01.031 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:14:01.031 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:14:01.032 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:14:01.032 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:14:01.033 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:14:01.034 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[DEBUG] 16:14:01.034 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[TRACE] 16:14:01.034 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[DEBUG] 16:14:01.034 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 16:14:01.034 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:14:01.034 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[INFO ] 16:14:01.034 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:14:01.035 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[TRACE] 16:14:01.035 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:14:01.035 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 16:14:01.036 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 16:14:01.036 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[INFO ] 16:17:11.741 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 31336 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:17:11.743 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:17:11.743 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:17:13.306 com.system.bgim.BgimApplication - Started BgimApplication in 1.932 seconds (JVM running for 2.797)
[INFO ] 16:17:13.308 com.system.bgim.AppRunner - ===========
[INFO ] 16:17:13.308 com.system.bgim.AppRunner - logger.info
[INFO ] 16:17:13.308 com.system.bgim.AppRunner - ===========
[TRACE] 16:17:13.308 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:17:13.308 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:17:13.308 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:17:13.308 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:17:13.308 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:17:13.308 com.system.bgim.AppRunner - slf4j since 20201012
[INFO ] 16:23:47.338 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 24516 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:23:47.340 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:23:47.341 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:30:06.164 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 19112 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:30:06.167 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:30:06.168 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:30:07.794 com.system.bgim.BgimApplication - Started BgimApplication in 1.995 seconds (JVM running for 2.874)
[INFO ] 16:30:07.797 com.system.bgim.AppRunner - ===========
[INFO ] 16:30:07.797 com.system.bgim.AppRunner - logger.info
[INFO ] 16:30:07.797 com.system.bgim.AppRunner - ===========
[TRACE] 16:30:07.797 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:30:07.797 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:30:07.797 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:30:07.797 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:30:07.797 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:30:07.798 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 16:30:11.361 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:30:11.464 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:30:11.465 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:30:11.569 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:30:11.570 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:30:11.572 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:30:11.572 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:30:11.574 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:30:11.574 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:30:11.580 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:30:11.581 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:30:11.582 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:30:11.584 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:30:11.584 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:30:11.584 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:30:11.585 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:30:11.586 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:30:11.586 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:30:16.294 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:30:16.299 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:30:16.299 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:30:16.310 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:30:16.311 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:30:16.315 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:30:16.315 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:30:24.365 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:30:24.366 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:30:24.367 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:30:24.383 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:30:24.387 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:30:24.395 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:30:24.396 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:30:24.397 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:30:24.397 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:30:24.397 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:30:24.399 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:30:24.399 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:30:24.399 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:30:24.399 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:35:04.127 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:35:04.128 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:35:04.128 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:35:04.130 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:35:04.131 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:35:04.134 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:35:04.134 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:35:18.872 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:35:18.873 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:35:18.874 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:35:18.876 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:35:18.877 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:35:18.877 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:35:18.877 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:35:18.878 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:35:18.879 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:35:18.879 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:35:18.880 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:35:18.880 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:35:18.881 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:35:18.881 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:35:20.906 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:35:20.907 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:35:20.907 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:35:20.911 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:35:20.913 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:35:20.913 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:35:20.913 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:35:20.925 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:145)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[DEBUG] 16:35:21.762 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:35:21.762 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:35:21.763 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:35:21.767 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:35:21.768 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:35:21.769 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:35:21.769 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:35:21.770 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:35:21.770 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:35:21.770 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:35:21.771 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:35:21.772 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:35:21.772 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:35:21.772 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[INFO ] 16:37:29.841 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 31964 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:37:29.842 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:37:29.843 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:37:31.413 com.system.bgim.BgimApplication - Started BgimApplication in 1.919 seconds (JVM running for 2.805)
[INFO ] 16:37:31.415 com.system.bgim.AppRunner - ===========
[INFO ] 16:37:31.415 com.system.bgim.AppRunner - logger.info
[INFO ] 16:37:31.415 com.system.bgim.AppRunner - ===========
[TRACE] 16:37:31.415 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:37:31.416 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:37:31.416 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:37:31.416 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:37:31.416 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:37:31.416 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 16:37:35.410 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:37:35.475 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:37:35.512 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:37:35.512 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:37:35.512 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:37:35.512 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:37:35.518 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:37:35.522 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:37:35.522 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:37:35.522 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:37:35.529 jdbc.sqlonly - 2. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[TRACE] 16:37:35.609 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:37:35.610 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:37:35.613 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:37:35.613 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:37:35.614 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:37:35.615 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:37:35.616 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:37:35.617 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:37:35.617 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:37:35.618 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:37:35.619 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:37:35.619 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:37:35.619 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:37:35.620 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:37:35.620 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:37:36.296 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:37:36.297 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:37:36.297 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:37:36.302 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:37:36.303 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:37:36.307 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:37:36.308 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:37:42.386 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:37:42.387 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:37:42.387 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:37:42.388 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:37:42.388 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:37:42.389 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:37:42.389 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:37:49.803 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:37:49.804 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:37:49.804 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:37:49.812 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:37:49.816 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:37:49.820 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:37:49.821 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:37:49.822 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:37:49.823 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:37:49.823 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:37:49.824 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:37:49.826 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:37:49.829 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:37:49.829 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:37:53.774 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:37:53.775 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:37:53.775 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:37:53.776 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:37:53.776 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:37:53.777 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:37:53.778 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:38:02.213 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:38:02.213 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:38:02.214 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:38:02.215 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:38:02.215 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:38:02.215 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:38:02.216 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:38:02.217 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:38:02.217 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:38:02.218 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:38:02.219 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:38:02.219 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:38:02.219 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:38:02.220 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:38:04.870 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:38:04.871 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:38:04.871 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:38:04.872 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:38:04.873 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:38:04.873 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:38:04.873 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:38:04.875 jdbc.sqlonly - 2. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[INFO ] 16:40:32.519 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 33252 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:40:32.521 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:40:32.521 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:40:34.200 com.system.bgim.BgimApplication - Started BgimApplication in 2.101 seconds (JVM running for 3.03)
[INFO ] 16:40:34.202 com.system.bgim.AppRunner - ===========
[INFO ] 16:40:34.202 com.system.bgim.AppRunner - logger.info
[INFO ] 16:40:34.202 com.system.bgim.AppRunner - ===========
[TRACE] 16:40:34.202 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:40:34.202 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:40:34.202 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:40:34.203 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:40:34.203 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:40:34.203 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 16:40:35.727 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:40:35.789 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:40:35.821 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[DEBUG] 16:40:35.821 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:40:35.822 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:40:35.822 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:40:35.900 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:40:35.900 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:40:35.901 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:40:35.902 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:40:35.903 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[TRACE] 16:40:35.903 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:40:35.904 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:40:35.905 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[INFO ] 16:40:35.905 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:40:35.905 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:40:35.910 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:40:35.910 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:40:35.910 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:40:35.910 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:40:35.911 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[INFO ] 16:40:35.911 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:40:35.912 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:40:35.912 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:40:35.912 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[TRACE] 16:40:35.912 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:40:35.912 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 16:40:35.912 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:40:35.913 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[TRACE] 16:40:35.913 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:40:35.914 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:40:35.915 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:41:09.477 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:41:09.477 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:41:09.478 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:41:09.480 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:41:09.480 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:41:09.482 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:41:09.483 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:41:09.485 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:41:09.485 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:41:09.486 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:41:09.486 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:41:09.486 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:41:09.488 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:41:09.489 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:41:09.489 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:41:09.489 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:41:09.490 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:41:09.490 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:41:09.495 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:41:09.496 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:41:09.496 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:41:09.509 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:41:09.511 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:41:09.511 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:41:09.512 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:41:09.522 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[DEBUG] 16:41:09.562 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:41:09.563 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:41:09.564 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:41:09.571 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:41:09.571 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:41:09.574 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:41:09.574 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:41:12.605 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:41:12.605 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:41:12.606 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:41:12.606 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:41:12.607 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:41:12.608 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:41:12.608 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:41:15.973 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:41:15.974 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:41:15.974 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:41:15.975 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:41:15.975 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:41:15.976 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:41:15.976 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:41:15.976 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:41:15.977 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:41:15.977 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:41:15.978 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:41:15.978 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:41:15.979 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:41:15.980 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:41:19.438 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:41:19.438 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:41:19.438 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:41:19.439 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:41:19.440 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:41:19.441 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:41:19.441 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:41:22.018 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:41:22.020 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:41:22.021 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:41:22.022 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:41:22.023 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:41:22.024 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:41:22.026 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:41:22.028 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:41:22.030 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:41:22.031 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:41:22.033 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:41:22.033 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:41:22.034 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:41:22.034 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:41:26.475 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:41:26.476 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:41:26.477 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:41:26.479 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:41:26.480 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:41:26.481 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:41:26.482 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:41:26.484 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 114 common frames omitted
[DEBUG] 16:41:44.690 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:41:44.690 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:41:44.690 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:41:44.691 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:41:44.692 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:41:44.692 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:41:44.692 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:41:44.692 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:41:44.693 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:41:44.693 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:41:44.694 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:41:44.694 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:41:44.694 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:41:44.694 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[INFO ] 16:42:02.833 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 27340 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:42:02.837 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:42:02.838 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[DEBUG] 16:42:09.104 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:42:09.106 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:42:09.107 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[DEBUG] 16:42:09.109 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[TRACE] 16:42:09.109 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:42:09.109 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:42:09.109 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[DEBUG] 16:42:09.110 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:42:09.110 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[TRACE] 16:42:09.110 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:42:09.111 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:42:09.112 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:42:09.112 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:42:09.112 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:42:09.113 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:42:09.113 jdbc.sqlonly - select max(history_id)+1 from

[DEBUG] 16:42:09.113 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:42:09.114 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:42:09.114 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:42:09.117 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:42:09.117 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[ERROR] 16:42:09.117 jdbc.sqlonly - 2. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 114 common frames omitted
[TRACE] 16:42:09.119 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:42:09.121 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:42:09.122 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:42:09.123 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:42:09.174 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:42:09.175 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:42:09.175 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:42:09.177 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:42:09.178 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:42:09.180 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:42:09.180 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:42:11.634 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:42:11.635 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:42:11.635 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:42:11.636 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:42:11.637 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:42:11.638 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:42:11.639 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:42:14.129 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:42:14.130 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:42:14.130 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:42:14.132 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:42:14.132 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:42:14.132 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:42:14.133 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:42:14.134 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:42:14.134 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:42:14.134 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:42:14.137 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:42:14.137 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:42:14.137 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:42:14.137 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:42:17.403 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:42:17.403 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:42:17.403 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:42:17.404 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:42:17.405 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:42:17.405 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:42:17.406 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:42:22.031 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:42:22.032 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:42:22.033 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:42:22.034 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:42:22.035 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:42:22.035 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:42:22.035 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:42:22.036 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:42:22.036 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:42:22.036 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:42:22.037 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:42:22.037 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:42:22.038 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:42:22.038 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:42:24.054 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:42:24.054 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:42:24.054 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:42:24.056 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:42:24.056 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:42:24.056 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:42:24.056 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:42:24.057 jdbc.sqlonly - 2. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 114 common frames omitted
[INFO ] 16:44:16.935 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 32228 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:44:16.940 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:44:16.940 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:44:19.309 com.system.bgim.BgimApplication - Started BgimApplication in 2.877 seconds (JVM running for 3.994)
[INFO ] 16:44:19.313 com.system.bgim.AppRunner - ===========
[INFO ] 16:44:19.314 com.system.bgim.AppRunner - logger.info
[INFO ] 16:44:19.314 com.system.bgim.AppRunner - ===========
[TRACE] 16:44:19.314 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:44:19.314 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:44:19.314 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:44:19.314 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:44:19.314 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:44:19.315 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 16:44:20.718 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:44:20.783 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:44:20.834 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:44:20.834 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:44:20.834 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:44:20.834 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:44:20.929 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:44:20.929 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:44:20.929 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:44:20.929 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:44:20.931 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:44:20.931 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:44:20.932 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[TRACE] 16:44:20.932 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:44:20.934 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[INFO ] 16:44:20.934 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:44:20.934 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:44:20.934 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:44:20.939 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:44:20.939 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:44:20.939 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:44:20.939 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:44:20.940 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:44:20.940 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:44:20.941 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:44:20.941 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:44:20.941 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:44:20.941 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:44:20.941 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:44:20.941 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:44:20.942 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[TRACE] 16:44:20.942 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:44:20.943 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[INFO ] 16:44:20.943 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:44:20.943 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:44:20.943 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:44:26.648 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:44:26.652 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:44:26.652 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:44:26.656 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:44:26.656 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:44:26.658 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:44:26.659 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:44:28.841 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:44:28.843 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:44:28.843 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:44:28.850 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:44:28.855 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:44:28.862 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:44:28.862 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:44:28.863 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:44:28.864 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:44:28.864 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:44:28.866 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:44:28.866 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:44:28.867 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:44:28.867 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:44:32.448 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:44:32.449 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:44:32.449 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:44:32.450 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:44:32.451 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:44:32.453 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:44:32.453 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:44:35.862 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:44:35.863 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:44:35.863 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:44:35.865 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:44:35.865 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:44:35.866 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:44:35.866 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:44:35.868 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:44:35.868 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:44:35.868 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:44:35.872 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:44:35.873 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:44:35.873 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:44:35.873 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:44:46.013 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:44:46.017 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:44:46.017 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:44:46.020 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:44:46.022 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:44:46.023 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:44:46.023 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:44:46.036 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[DEBUG] 16:45:28.323 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:45:28.324 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:45:28.324 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:45:28.325 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:45:28.325 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:45:28.326 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:45:28.326 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:45:28.326 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:45:28.327 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:45:28.327 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:45:28.327 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:45:28.328 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:45:28.328 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:45:28.328 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:45:29.523 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:45:29.526 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:45:29.526 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:45:29.530 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:45:29.532 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from 
[DEBUG] 16:45:29.533 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:45:29.534 jdbc.sqlonly - select max(history_id)+1 from

[ERROR] 16:45:29.537 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[DEBUG] 16:45:34.604 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:45:34.605 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:45:34.605 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:45:34.607 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:45:34.607 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:45:34.608 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:45:34.608 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 16:46:53.986 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 16724 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:46:53.989 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:46:53.989 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:46:56.706 com.system.bgim.BgimApplication - Started BgimApplication in 3.623 seconds (JVM running for 4.621)
[INFO ] 16:46:56.710 com.system.bgim.AppRunner - ===========
[INFO ] 16:46:56.710 com.system.bgim.AppRunner - logger.info
[INFO ] 16:46:56.710 com.system.bgim.AppRunner - ===========
[TRACE] 16:46:56.711 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:46:56.711 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:46:56.711 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:46:56.711 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:46:56.711 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:46:56.712 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 16:46:57.866 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:46:58.004 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:46:58.004 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:46:58.154 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:46:58.155 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:46:58.158 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:46:58.158 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:46:58.162 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:46:58.163 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:46:58.168 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:46:58.168 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:46:58.168 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:46:58.169 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:46:58.169 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:46:58.170 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:46:58.170 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:46:58.171 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:46:58.171 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:46:59.112 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:46:59.118 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:46:59.119 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:46:59.130 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:46:59.135 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:46:59.142 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:46:59.143 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:46:59.143 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:46:59.144 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:46:59.144 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:46:59.145 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:46:59.146 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:46:59.146 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:46:59.146 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:47:01.418 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:47:01.419 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:47:01.419 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:47:01.421 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:47:01.424 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from org_user 
[DEBUG] 16:47:01.424 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:47:01.424 jdbc.sqlonly - select max(history_id)+1 from org_user

[ERROR] 16:47:01.438 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from org_user

java.sql.SQLSyntaxErrorException: ORA-00904: "HISTORY_ID": 부적합한 식별자

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00904: "HISTORY_ID": 부적합한 식별자

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[DEBUG] 16:47:01.979 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:47:01.979 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:47:01.980 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:47:01.981 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:47:01.981 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:47:01.981 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:47:01.981 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:47:01.982 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:47:01.982 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:47:01.982 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:47:01.983 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:47:01.984 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:47:01.985 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:47:01.985 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:47:02.562 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:47:02.563 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:47:02.563 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:47:02.565 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:47:02.565 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from mall_user 
[DEBUG] 16:47:02.566 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:47:02.566 jdbc.sqlonly - select max(history_id)+1 from mall_user

[ERROR] 16:47:02.571 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from mall_user

java.sql.SQLSyntaxErrorException: ORA-00904: "HISTORY_ID": 부적합한 식별자

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00904: "HISTORY_ID": 부적합한 식별자

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 115 common frames omitted
[DEBUG] 16:47:02.573 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:47:02.574 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:47:02.574 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:47:02.579 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:47:02.579 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:47:02.581 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:47:02.582 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:47:11.253 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:47:11.254 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:47:11.254 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:47:11.255 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:47:11.255 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:47:11.257 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:47:11.257 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:47:15.968 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:47:15.969 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:47:15.970 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:47:15.971 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:47:15.971 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:47:15.972 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:47:15.972 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:47:15.973 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:47:15.974 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:47:15.974 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:47:15.975 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:47:15.976 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:47:15.976 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:47:15.976 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:47:19.278 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:47:19.279 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:47:19.279 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:47:19.280 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:47:19.281 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:47:19.284 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:47:19.284 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:47:31.355 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:47:31.357 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:47:31.359 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:47:31.361 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:47:31.361 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:47:31.361 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:47:31.362 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:47:31.363 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:47:31.363 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:47:31.364 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:47:31.365 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:47:31.365 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:47:31.366 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:47:31.366 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:47:37.837 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:47:37.837 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:47:37.837 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:47:37.840 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:47:37.841 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from org_user 
[DEBUG] 16:47:37.841 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:47:37.841 jdbc.sqlonly - select max(history_id)+1 from org_user

[ERROR] 16:47:37.844 jdbc.sqlonly - 1. PreparedStatement.execute() select max(history_id)+1 from org_user

java.sql.SQLSyntaxErrorException: ORA-00904: "HISTORY_ID": 부적합한 식별자

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processGeneratedKeys(SelectKeyGenerator.java:68)
	at org.apache.ibatis.executor.keygen.SelectKeyGenerator.processBefore(SelectKeyGenerator.java:47)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.generateKeys(BaseStatementHandler.java:141)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.<init>(BaseStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.<init>(PreparedStatementHandler.java:40)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.<init>(RoutingStatementHandler.java:46)
	at org.apache.ibatis.session.Configuration.newStatementHandler(Configuration.java:558)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:48)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:147)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00904: "HISTORY_ID": 부적합한 식별자

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 114 common frames omitted
[INFO ] 16:50:26.672 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 29624 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:50:26.675 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:50:26.675 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:50:28.733 com.system.bgim.BgimApplication - Started BgimApplication in 2.478 seconds (JVM running for 3.525)
[INFO ] 16:50:28.735 com.system.bgim.AppRunner - ===========
[INFO ] 16:50:28.735 com.system.bgim.AppRunner - logger.info
[INFO ] 16:50:28.735 com.system.bgim.AppRunner - ===========
[TRACE] 16:50:28.735 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:50:28.735 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:50:28.735 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:50:28.735 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:50:28.735 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:50:28.736 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 16:50:29.901 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:50:29.971 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:50:30.051 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:50:30.051 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:50:30.052 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[INFO ] 16:50:30.052 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[DEBUG] 16:50:30.118 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:50:30.119 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:50:30.119 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[DEBUG] 16:50:30.186 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:50:30.187 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:50:30.187 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:50:30.191 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[TRACE] 16:50:30.239 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:50:30.239 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:50:30.239 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:50:30.240 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:50:30.240 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:50:30.242 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:50:30.242 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:50:30.244 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[TRACE] 16:50:30.245 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[TRACE] 16:50:30.245 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:50:30.247 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[INFO ] 16:50:30.248 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[INFO ] 16:50:30.248 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:50:30.248 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:50:30.248 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:50:30.248 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:50:30.252 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:50:30.252 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:50:30.252 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:50:30.252 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:50:30.252 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:50:30.252 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:50:30.252 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:50:30.252 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:50:30.252 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:50:30.253 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:50:30.253 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:50:30.253 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:50:30.254 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:50:30.254 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:50:30.254 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:50:30.254 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:50:30.254 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[TRACE] 16:50:30.254 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:50:30.255 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[TRACE] 16:50:30.255 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:50:30.255 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:50:30.256 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[INFO ] 16:50:30.256 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:50:30.256 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:50:30.256 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:50:31.052 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:50:31.053 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:50:31.053 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:50:31.061 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:50:31.062 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:50:31.065 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:50:31.066 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:50:33.582 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:50:33.582 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:50:33.583 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:50:33.584 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:50:33.584 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:50:33.586 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:50:33.586 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:50:37.407 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:50:37.409 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:50:37.409 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:50:37.411 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:50:37.411 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:50:37.412 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:50:37.412 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:50:37.413 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:50:37.414 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:50:37.414 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:50:37.415 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:50:37.415 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:50:37.416 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:50:37.416 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:50:41.166 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:50:41.167 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:50:41.167 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:50:41.168 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:50:41.168 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:50:41.170 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:50:41.170 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:50:44.601 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:50:44.601 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:50:44.602 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:50:44.604 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:50:44.605 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:50:44.605 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:50:44.605 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:50:44.606 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:50:44.606 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:50:44.607 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:50:44.608 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:50:44.609 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:50:44.609 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:50:44.609 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:51:05.215 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:51:05.216 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:51:05.216 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:51:05.218 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[INFO ] 16:53:01.104 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 27280 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 16:53:01.108 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 16:53:01.109 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 16:53:02.966 com.system.bgim.BgimApplication - Started BgimApplication in 2.281 seconds (JVM running for 3.283)
[INFO ] 16:53:02.968 com.system.bgim.AppRunner - ===========
[INFO ] 16:53:02.968 com.system.bgim.AppRunner - logger.info
[INFO ] 16:53:02.968 com.system.bgim.AppRunner - ===========
[TRACE] 16:53:02.968 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 16:53:02.969 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 16:53:02.969 com.system.bgim.AppRunner - An INFO Message
[WARN ] 16:53:02.969 com.system.bgim.AppRunner - A WARN Message
[ERROR] 16:53:02.969 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 16:53:02.969 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 16:53:09.352 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:53:09.436 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:09.515 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:53:09.515 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:53:09.515 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:53:09.515 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:53:09.674 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:09.674 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:53:09.674 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:09.677 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:09.677 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[TRACE] 16:53:09.677 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:53:09.679 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:09.679 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[INFO ] 16:53:09.680 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:53:09.680 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:53:09.686 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:09.686 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:53:09.687 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 16:53:09.687 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:53:09.687 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 16:53:09.687 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:53:09.688 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:53:09.688 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:09.689 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[TRACE] 16:53:09.689 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:09.690 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 16:53:09.690 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:53:09.690 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[TRACE] 16:53:09.690 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:09.690 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:09.691 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.045 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.046 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.047 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.049 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.049 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.058 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.060 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.061 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.062 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.063 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.063 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.063 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.064 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.064 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.065 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.065 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.066 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.066 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.078 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:53:10.079 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:53:10.079 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:53:10.081 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:53:10.083 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 16:53:10.083 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:53:10.083 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 16:53:10.089 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:53:10.089 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: null
[INFO ] 16:53:10.091 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|[null]            |
|------------------|

[DEBUG] 16:53:10.091 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:53:10.256 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.256 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.256 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.258 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.258 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.259 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.259 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.260 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.260 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.261 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.261 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.261 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.262 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.262 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.263 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.263 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.264 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.264 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.432 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.432 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.432 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.433 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.433 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.433 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.433 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.434 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.434 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.435 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.435 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.435 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.436 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.436 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.436 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.436 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.437 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.437 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.631 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:53:10.631 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:53:10.632 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:53:10.640 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:53:10.641 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:53:10.642 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:53:10.642 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:53:10.707 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.707 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.707 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.709 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.709 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.710 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.711 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.713 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.713 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:10.715 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 16:53:10.715 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 16:53:10.716 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 16:53:10.717 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 16:53:10.717 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 16:53:10.718 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 16:53:10.721 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 16:53:10.722 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 16:53:10.722 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 16:53:13.018 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:53:13.019 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:53:13.020 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:53:13.023 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:53:13.023 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:53:13.024 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:53:13.025 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:53:16.404 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:53:16.405 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:53:16.405 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:53:16.408 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:53:16.408 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:53:16.408 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:53:16.409 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:53:16.410 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:53:16.411 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:53:16.411 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:53:16.414 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:53:16.414 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:53:16.414 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:53:16.414 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:53:19.379 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:53:19.379 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:53:19.380 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:53:19.380 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:53:19.381 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:53:19.382 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:53:19.382 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:53:22.823 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:53:22.823 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:53:22.824 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:53:22.825 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:53:22.825 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:53:22.826 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:53:22.826 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:53:22.827 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:53:22.828 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:53:22.828 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:53:22.832 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:53:22.832 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:53:22.833 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:53:22.833 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:53:27.737 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:53:27.738 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:53:27.738 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:53:27.739 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:53:27.740 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 16:53:27.740 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:53:27.740 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 16:53:27.741 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:53:27.741 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: null
[INFO ] 16:53:27.741 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|[null]            |
|------------------|

[DEBUG] 16:53:27.741 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:57:50.379 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:57:50.380 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:57:50.380 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:57:50.381 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:57:50.382 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:57:50.382 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:57:50.382 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:57:50.383 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:57:50.383 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:57:50.383 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:57:50.385 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:57:50.385 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:57:50.385 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:57:50.385 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:57:51.001 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:57:51.002 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:57:51.002 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:57:51.004 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:57:51.005 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 16:57:51.005 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:57:51.006 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 16:57:51.010 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:57:51.010 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 1
[INFO ] 16:57:51.011 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|1                 |
|------------------|

[DEBUG] 16:57:51.011 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:57:51.016 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 16:57:51.017 c.s.b.m.H.userHistoryInsert - ==> Parameters: 1(Integer), success(String), mall(String), stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:57:51.017 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (1,'success','mall','stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[DEBUG] 16:57:51.020 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 16:57:52.290 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 16:57:52.291 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 16:57:52.291 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 16:57:52.292 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 16:57:52.292 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 16:57:52.293 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 16:57:52.294 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 16:57:55.973 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:57:55.974 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:57:55.974 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:57:55.977 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:57:55.977 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:57:55.978 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:57:55.978 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:57:55.978 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 16:57:55.979 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:57:55.979 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:57:55.980 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:57:55.980 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:57:55.980 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:57:55.980 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:57:57.675 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:57:57.676 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:57:57.676 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:57:57.678 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:57:57.678 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 16:57:57.679 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:57:57.679 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 16:57:57.680 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:57:57.680 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 2
[INFO ] 16:57:57.680 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|2                 |
|------------------|

[DEBUG] 16:57:57.681 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:57:57.681 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 16:57:57.681 c.s.b.m.H.userHistoryInsert - ==> Parameters: 2(Integer), success(String), mall(String), stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:57:57.681 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (2,'success','mall','stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[DEBUG] 16:57:57.683 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 16:57:58.264 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:57:58.265 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:57:58.265 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:57:58.266 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:57:58.266 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:57:58.266 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:57:58.266 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:57:58.266 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM mall_user WHERE CODE = ? 
[DEBUG] 16:57:58.266 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 16:57:58.267 jdbc.sqlonly - SELECT
            count(*)
        FROM mall_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 16:57:58.267 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 16:57:58.267 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 16:57:58.268 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 16:57:58.268 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 16:57:58.903 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 16:57:58.904 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:57:58.904 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 16:57:58.905 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 16:57:58.905 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 16:57:58.906 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 16:57:58.906 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 16:57:58.907 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 16:57:58.907 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 3
[INFO ] 16:57:58.907 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|3                 |
|------------------|

[DEBUG] 16:57:58.907 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 16:57:58.908 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 16:57:58.908 c.s.b.m.H.userHistoryInsert - ==> Parameters: 3(Integer), success(String), mall(String), stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 16:57:58.908 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (3,'success','mall','stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[DEBUG] 16:57:58.910 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[INFO ] 17:19:10.192 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 32924 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 17:19:10.195 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 17:19:10.196 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 17:19:12.116 com.system.bgim.BgimApplication - Started BgimApplication in 2.342 seconds (JVM running for 3.39)
[INFO ] 17:19:12.118 com.system.bgim.AppRunner - ===========
[INFO ] 17:19:12.118 com.system.bgim.AppRunner - logger.info
[INFO ] 17:19:12.118 com.system.bgim.AppRunner - ===========
[TRACE] 17:19:12.118 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 17:19:12.118 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 17:19:12.118 com.system.bgim.AppRunner - An INFO Message
[WARN ] 17:19:12.118 com.system.bgim.AppRunner - A WARN Message
[ERROR] 17:19:12.119 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 17:19:12.119 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 17:19:16.353 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 17:19:16.487 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 17:19:16.487 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 17:19:16.641 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 17:19:16.641 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 17:19:16.645 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 17:19:16.645 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 17:19:16.649 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 17:19:16.650 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 17:19:16.654 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 17:19:16.655 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 17:19:16.655 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 17:19:16.656 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 17:19:16.657 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 17:19:16.657 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 17:19:16.657 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 17:19:16.658 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 17:19:16.658 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 17:19:17.481 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 17:19:17.486 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 17:19:17.486 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 17:19:17.491 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 17:19:17.492 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 17:19:17.496 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 17:19:17.496 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 17:19:25.086 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 17:19:25.086 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 17:19:25.087 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 17:19:25.087 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 17:19:25.087 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 17:19:25.088 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 17:19:25.088 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 17:19:25.088 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 17:19:25.088 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 17:19:25.089 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 17:19:25.089 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 17:19:25.089 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 17:19:25.091 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 17:19:25.091 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 17:19:25.092 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 17:19:25.092 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 17:19:25.093 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 17:19:25.093 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 17:19:27.312 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 17:19:27.312 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 17:19:27.313 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 17:19:27.313 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 17:19:27.314 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 17:19:27.316 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 17:19:27.316 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 17:19:32.262 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 17:19:32.263 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 17:19:32.263 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 17:19:32.273 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 17:19:32.277 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 17:19:32.281 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 17:19:32.281 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 17:19:32.282 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 17:19:32.282 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 17:19:32.282 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 17:19:32.284 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 17:19:32.284 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 17:19:32.284 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 17:19:32.284 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 17:19:36.268 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 17:19:36.270 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 17:19:36.270 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 17:19:36.271 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 17:19:36.272 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 17:19:36.273 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 17:19:36.273 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 17:19:58.894 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 17:19:58.895 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 17:19:58.895 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 17:19:58.897 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 17:19:58.897 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 17:19:58.898 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 17:19:58.898 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 17:19:58.899 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 17:19:58.899 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 17:19:58.899 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 17:19:58.900 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 17:19:58.900 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 17:19:58.901 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 17:19:58.901 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 17:20:04.458 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 17:20:04.459 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 17:20:04.459 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 17:20:04.462 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 17:20:04.464 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 17:20:04.464 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 17:20:04.464 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 17:20:04.465 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 17:20:04.465 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 17:20:04.466 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 17:20:04.466 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 17:20:04.468 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 17:20:04.469 c.s.b.m.H.userHistoryInsert - ==> Parameters: 4(Integer), success(String), mall(String), stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 17:20:04.469 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (4,'success','mall','stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[DEBUG] 17:20:04.472 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 17:22:23.901 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 17:22:23.902 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 17:22:23.902 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 17:22:23.903 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 17:22:23.903 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 17:22:23.903 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 17:22:23.903 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 17:22:23.904 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 17:22:23.904 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 17:22:23.905 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 17:22:23.905 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 17:22:23.905 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 17:22:23.906 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 17:22:23.906 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 17:22:31.760 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 17:22:31.761 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 17:22:31.761 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 17:22:31.764 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 17:22:31.765 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 17:22:31.765 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 17:22:31.765 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 17:22:31.770 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 17:22:31.770 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 17:22:31.772 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 17:22:31.772 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 17:22:31.773 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 17:22:31.774 c.s.b.m.H.userHistoryInsert - ==> Parameters: 4(Integer), success(String), mall(String), stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 17:22:31.774 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (4,'success','mall','stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[DEBUG] 17:22:31.788 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 17:23:23.818 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 17:23:23.818 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 17:23:23.819 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 17:23:23.824 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 17:23:23.824 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 17:23:23.824 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 17:23:23.825 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 17:23:23.826 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 17:23:23.826 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 17:23:23.827 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 17:23:23.828 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 17:23:23.828 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 17:23:23.829 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 17:23:23.829 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 17:23:23.830 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 17:23:23.830 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 17:23:23.830 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 17:23:23.830 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 17:23:23.894 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 17:23:23.895 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 17:23:23.897 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 17:23:23.899 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 17:23:23.899 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[INFO ] 17:23:23.901 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 17:23:23.902 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1

[INFO ] 11:32:32.310 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 9724 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 11:32:32.316 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 11:32:32.320 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 11:32:34.458 com.system.bgim.BgimApplication - Started BgimApplication in 2.632 seconds (JVM running for 3.795)
[INFO ] 11:32:34.460 com.system.bgim.AppRunner - ===========
[INFO ] 11:32:34.461 com.system.bgim.AppRunner - logger.info
[INFO ] 11:32:34.461 com.system.bgim.AppRunner - ===========
[TRACE] 11:32:34.461 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 11:32:34.461 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 11:32:34.461 com.system.bgim.AppRunner - An INFO Message
[WARN ] 11:32:34.461 com.system.bgim.AppRunner - A WARN Message
[ERROR] 11:32:34.461 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 11:32:34.461 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 11:32:35.825 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:32:35.906 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:32:35.906 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:32:35.977 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:32:35.978 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:32:35.979 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 11:32:35.979 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 11:32:35.981 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 11:32:35.981 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 11:32:35.985 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 11:32:35.986 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 11:32:35.986 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 11:32:35.987 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 11:32:35.987 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 11:32:35.987 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 11:32:35.988 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 11:32:35.988 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 11:32:35.988 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 11:32:41.294 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM provision_history_user 
[DEBUG] 11:32:41.295 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 11:32:41.295 jdbc.sqlonly - SELECT * FROM provision_history_user

[TRACE] 11:32:41.303 c.s.b.m.H.userHistoryList - <==    Columns: HISTORY_ID, STATUS, RESOURCE_NAME, CONTENT, EXECUTED_TIME, USER_ID
[TRACE] 11:32:41.305 c.s.b.m.H.userHistoryList - <==        Row: 1, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 15:06:27.0, BGCOMMERCE.tonikroos8987
[TRACE] 11:32:41.306 c.s.b.m.H.userHistoryList - <==        Row: 2, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 15:06:56.0, BGCOMMERCE.tonikroos8987
[TRACE] 11:32:41.306 c.s.b.m.H.userHistoryList - <==        Row: 3, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 16:20:22.0, BGCOMMERCE.tonikroos8987
[TRACE] 11:32:41.307 c.s.b.m.H.userHistoryList - <==        Row: 0, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-19 17:28:12.0, BGCOMMERCE.tonikroos8987
[TRACE] 11:32:41.307 c.s.b.m.H.userHistoryList - <==        Row: 4, success, mall, stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-21 17:22:31.0, BGCOMMERCE.stevie5
[INFO ] 11:32:41.308 jdbc.resultsettable - 
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|
|history_id |status  |resource_name |content                                                              |executed_time         |user_id                  |
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|
|1          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 15:06:27.0 |BGCOMMERCE.tonikroos8987 |
|2          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 15:06:56.0 |BGCOMMERCE.tonikroos8987 |
|3          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 16:20:22.0 |BGCOMMERCE.tonikroos8987 |
|0          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-19 17:28:12.0 |BGCOMMERCE.tonikroos8987 |
|4          |success |mall          |stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.           |2020-10-21 17:22:31.0 |BGCOMMERCE.stevie5       |
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|

[DEBUG] 11:32:41.309 c.s.b.m.H.userHistoryList - <==      Total: 5
[INFO ] 13:14:24.249 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 30032 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:14:24.251 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:14:24.252 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:14:26.184 com.system.bgim.BgimApplication - Started BgimApplication in 2.282 seconds (JVM running for 3.166)
[INFO ] 13:14:26.185 com.system.bgim.AppRunner - ===========
[INFO ] 13:14:26.186 com.system.bgim.AppRunner - logger.info
[INFO ] 13:14:26.186 com.system.bgim.AppRunner - ===========
[TRACE] 13:14:26.186 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:14:26.186 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:14:26.186 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:14:26.186 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:14:26.186 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:14:26.187 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:14:43.229 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:14:43.315 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:14:43.316 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:14:43.408 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:14:43.408 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:14:43.409 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:14:43.410 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:14:43.411 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:14:43.411 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:14:43.415 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:14:43.415 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:14:43.415 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:14:43.416 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:14:43.417 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:14:43.417 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:14:43.417 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:14:43.418 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:14:43.418 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:14:46.410 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM provision_history_user 
[DEBUG] 13:14:46.411 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 13:14:46.411 jdbc.sqlonly - SELECT * FROM provision_history_user

[TRACE] 13:14:46.428 c.s.b.m.H.userHistoryList - <==    Columns: HISTORY_ID, STATUS, RESOURCE_NAME, CONTENT, EXECUTED_TIME, USER_ID
[TRACE] 13:14:46.430 c.s.b.m.H.userHistoryList - <==        Row: 1, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 15:06:27.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:14:46.432 c.s.b.m.H.userHistoryList - <==        Row: 2, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 15:06:56.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:14:46.432 c.s.b.m.H.userHistoryList - <==        Row: 3, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 16:20:22.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:14:46.432 c.s.b.m.H.userHistoryList - <==        Row: 0, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-19 17:28:12.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:14:46.433 c.s.b.m.H.userHistoryList - <==        Row: 4, success, mall, stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-21 17:22:31.0, BGCOMMERCE.stevie5
[INFO ] 13:14:46.436 jdbc.resultsettable - 
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|
|history_id |status  |resource_name |content                                                              |executed_time         |user_id                  |
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|
|1          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 15:06:27.0 |BGCOMMERCE.tonikroos8987 |
|2          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 15:06:56.0 |BGCOMMERCE.tonikroos8987 |
|3          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 16:20:22.0 |BGCOMMERCE.tonikroos8987 |
|0          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-19 17:28:12.0 |BGCOMMERCE.tonikroos8987 |
|4          |success |mall          |stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.           |2020-10-21 17:22:31.0 |BGCOMMERCE.stevie5       |
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|

[DEBUG] 13:14:46.436 c.s.b.m.H.userHistoryList - <==      Total: 5
[INFO ] 13:17:05.640 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 15512 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:17:05.642 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:17:05.642 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:17:07.397 com.system.bgim.BgimApplication - Started BgimApplication in 2.104 seconds (JVM running for 2.999)
[INFO ] 13:17:07.398 com.system.bgim.AppRunner - ===========
[INFO ] 13:17:07.398 com.system.bgim.AppRunner - logger.info
[INFO ] 13:17:07.398 com.system.bgim.AppRunner - ===========
[TRACE] 13:17:07.398 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:17:07.398 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:17:07.398 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:17:07.398 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:17:07.398 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:17:07.399 com.system.bgim.AppRunner - slf4j since 20201012
[INFO ] 13:17:31.473 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 13628 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:17:31.475 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:17:31.476 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:17:33.285 com.system.bgim.BgimApplication - Started BgimApplication in 2.189 seconds (JVM running for 3.088)
[INFO ] 13:17:33.287 com.system.bgim.AppRunner - ===========
[INFO ] 13:17:33.287 com.system.bgim.AppRunner - logger.info
[INFO ] 13:17:33.287 com.system.bgim.AppRunner - ===========
[TRACE] 13:17:33.287 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:17:33.288 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:17:33.288 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:17:33.288 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:17:33.288 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:17:33.288 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:17:35.309 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:17:35.399 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:17:35.400 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:17:35.489 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:17:35.490 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:17:35.493 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:17:35.494 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:17:35.496 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:17:35.496 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:17:35.503 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:17:35.503 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:17:35.504 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:17:35.505 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:17:35.505 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:17:35.505 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:17:35.505 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:17:35.506 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:17:35.507 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:17:40.258 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM 
[DEBUG] 13:17:40.260 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 13:17:40.261 jdbc.sqlonly - SELECT * FROM

[ERROR] 13:17:40.266 jdbc.sqlonly - 1. PreparedStatement.execute() SELECT * FROM

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryList(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryListService(HistoryService.java:23)
	at com.system.bgim.controller.HistoryController.syncUserList(HistoryController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 106 common frames omitted
[INFO ] 13:20:42.976 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 28024 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:20:42.978 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:20:42.979 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:20:44.730 com.system.bgim.BgimApplication - Started BgimApplication in 2.108 seconds (JVM running for 3.161)
[INFO ] 13:20:44.733 com.system.bgim.AppRunner - ===========
[INFO ] 13:20:44.733 com.system.bgim.AppRunner - logger.info
[INFO ] 13:20:44.733 com.system.bgim.AppRunner - ===========
[TRACE] 13:20:44.733 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:20:44.734 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:20:44.734 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:20:44.734 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:20:44.734 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:20:44.734 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:20:47.256 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:20:47.350 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:20:47.351 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:20:47.486 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:20:47.487 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:20:47.489 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:20:47.490 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:20:47.492 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:20:47.492 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:20:47.499 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:20:47.499 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:20:47.500 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:20:47.501 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:20:47.501 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:20:47.502 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:20:47.502 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:20:47.503 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:20:47.503 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:20:52.711 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM 
[DEBUG] 13:20:52.712 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 13:20:52.712 jdbc.sqlonly - SELECT * FROM

[ERROR] 13:20:52.716 jdbc.sqlonly - 1. PreparedStatement.execute() SELECT * FROM

java.sql.SQLSyntaxErrorException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForDescribe(T4CPreparedStatement.java:747)
	at oracle.jdbc.driver.OracleStatement.executeMaybeDescribe(OracleStatement.java:904)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1082)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:326)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:139)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:76)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryList(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryList(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryListService(HistoryService.java:23)
	at com.system.bgim.controller.HistoryController.provisionUserList(HistoryController.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:626)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00903: 테이블명이 부적합합니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 106 common frames omitted
[DEBUG] 13:20:58.089 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM sync_history_user 
[DEBUG] 13:20:58.090 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 13:20:58.091 jdbc.sqlonly - SELECT * FROM sync_history_user

[TRACE] 13:20:58.097 c.s.b.m.H.userHistoryList - <==    Columns: HISTORY_ID, STATUS, RESOURCE_NAME, CONTENT, EXECUTED_TIME, USER_ID
[TRACE] 13:20:58.103 c.s.b.m.H.userHistoryList - <==        Row: 0, test, test, test, 2020-10-21 16:57:41.0, test
[TRACE] 13:20:58.105 c.s.b.m.H.userHistoryList - <==        Row: 1, success, mall, stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-21 16:57:51.0, BGCOMMERCE.stevie5
[TRACE] 13:20:58.105 c.s.b.m.H.userHistoryList - <==        Row: 2, success, mall, stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-21 16:57:57.0, BGCOMMERCE.stevie5
[TRACE] 13:20:58.105 c.s.b.m.H.userHistoryList - <==        Row: 3, success, mall, stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-21 16:57:58.0, BGCOMMERCE.stevie5
[TRACE] 13:20:58.106 c.s.b.m.H.userHistoryList - <==        Row: 4, success, mall, stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-21 17:20:04.0, BGCOMMERCE.stevie5
[INFO ] 13:20:58.108 jdbc.resultsettable - 
|-----------|--------|--------------|-----------------------------------------------------------|----------------------|-------------------|
|history_id |status  |resource_name |content                                                    |executed_time         |user_id            |
|-----------|--------|--------------|-----------------------------------------------------------|----------------------|-------------------|
|0          |test    |test          |test                                                       |2020-10-21 16:57:41.0 |test               |
|1          |success |mall          |stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-21 16:57:51.0 |BGCOMMERCE.stevie5 |
|2          |success |mall          |stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-21 16:57:57.0 |BGCOMMERCE.stevie5 |
|3          |success |mall          |stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-21 16:57:58.0 |BGCOMMERCE.stevie5 |
|4          |success |mall          |stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-21 17:20:04.0 |BGCOMMERCE.stevie5 |
|-----------|--------|--------------|-----------------------------------------------------------|----------------------|-------------------|

[DEBUG] 13:20:58.108 c.s.b.m.H.userHistoryList - <==      Total: 5
[INFO ] 13:21:58.376 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 22048 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:21:58.377 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:21:58.378 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:22:00.249 com.system.bgim.BgimApplication - Started BgimApplication in 2.253 seconds (JVM running for 3.139)
[INFO ] 13:22:00.251 com.system.bgim.AppRunner - ===========
[INFO ] 13:22:00.251 com.system.bgim.AppRunner - logger.info
[INFO ] 13:22:00.251 com.system.bgim.AppRunner - ===========
[TRACE] 13:22:00.251 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:22:00.251 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:22:00.251 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:22:00.251 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:22:00.251 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:22:00.252 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:22:05.155 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:22:05.287 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:22:05.288 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:22:05.426 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:22:05.426 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:22:05.428 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:22:05.428 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:22:05.430 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:22:05.431 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:22:05.440 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:22:05.440 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:22:05.440 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:22:05.442 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:22:05.442 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:22:05.442 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:22:05.442 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:22:05.443 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:22:05.444 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:22:07.975 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM provision_history_user 
[DEBUG] 13:22:07.975 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 13:22:07.975 jdbc.sqlonly - SELECT * FROM provision_history_user

[TRACE] 13:22:07.981 c.s.b.m.H.userHistoryList - <==    Columns: HISTORY_ID, STATUS, RESOURCE_NAME, CONTENT, EXECUTED_TIME, USER_ID
[TRACE] 13:22:07.983 c.s.b.m.H.userHistoryList - <==        Row: 1, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 15:06:27.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:22:07.987 c.s.b.m.H.userHistoryList - <==        Row: 2, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 15:06:56.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:22:07.988 c.s.b.m.H.userHistoryList - <==        Row: 3, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-20 16:20:22.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:22:07.989 c.s.b.m.H.userHistoryList - <==        Row: 0, success, mall, tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-19 17:28:12.0, BGCOMMERCE.tonikroos8987
[TRACE] 13:22:07.989 c.s.b.m.H.userHistoryList - <==        Row: 4, success, mall, stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다., 2020-10-21 17:22:31.0, BGCOMMERCE.stevie5
[INFO ] 13:22:07.992 jdbc.resultsettable - 
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|
|history_id |status  |resource_name |content                                                              |executed_time         |user_id                  |
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|
|1          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 15:06:27.0 |BGCOMMERCE.tonikroos8987 |
|2          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 15:06:56.0 |BGCOMMERCE.tonikroos8987 |
|3          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-20 16:20:22.0 |BGCOMMERCE.tonikroos8987 |
|0          |success |mall          |tonikroos(tonikroos.8987@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다. |2020-10-19 17:28:12.0 |BGCOMMERCE.tonikroos8987 |
|4          |success |mall          |stevie(stevie5@tmail.com) 사용자 작업(user.updateUser)를 성공했습니다.           |2020-10-21 17:22:31.0 |BGCOMMERCE.stevie5       |
|-----------|--------|--------------|---------------------------------------------------------------------|----------------------|-------------------------|

[DEBUG] 13:22:07.992 c.s.b.m.H.userHistoryList - <==      Total: 5
[INFO ] 13:26:31.679 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 12020 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:26:31.682 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:26:31.682 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:26:33.239 com.system.bgim.BgimApplication - Started BgimApplication in 1.903 seconds (JVM running for 2.86)
[INFO ] 13:26:33.242 com.system.bgim.AppRunner - ===========
[INFO ] 13:26:33.242 com.system.bgim.AppRunner - logger.info
[INFO ] 13:26:33.242 com.system.bgim.AppRunner - ===========
[TRACE] 13:26:33.242 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:26:33.242 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:26:33.242 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:26:33.242 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:26:33.242 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:26:33.243 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:26:52.649 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:26:52.780 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:26:52.780 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:26:52.898 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:26:52.899 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:26:52.901 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:26:52.901 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:26:52.903 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:26:52.903 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:26:52.911 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:26:52.911 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:26:52.911 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:26:52.912 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:26:52.913 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:26:52.913 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:26:52.913 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:26:52.914 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:26:52.914 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:26:56.563 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM sync_history_user 
[DEBUG] 13:26:56.563 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 13:26:56.563 jdbc.sqlonly - SELECT * FROM sync_history_user

[TRACE] 13:26:56.574 c.s.b.m.H.userHistoryList - <==    Columns: HISTORY_ID, STATUS, CONTENT, EXECUTED_TIME, USER_ID
[TRACE] 13:26:56.576 c.s.b.m.H.userHistoryList - <==        Row: 0, success, BGCOMMERCE.stevie1의 인사동기화가 성공하였습니다, 2020-10-22 13:26:09.0, BGCOMMERCE.stevie1
[INFO ] 13:26:56.578 jdbc.resultsettable - 
|-----------|--------|-----------------------------------|----------------------|-------------------|
|history_id |status  |content                            |executed_time         |user_id            |
|-----------|--------|-----------------------------------|----------------------|-------------------|
|0          |success |BGCOMMERCE.stevie1의 인사동기화가 성공하였습니다 |2020-10-22 13:26:09.0 |BGCOMMERCE.stevie1 |
|-----------|--------|-----------------------------------|----------------------|-------------------|

[DEBUG] 13:26:56.578 c.s.b.m.H.userHistoryList - <==      Total: 1
[INFO ] 13:39:45.159 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 30704 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:39:45.161 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:39:45.161 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:39:46.792 com.system.bgim.BgimApplication - Started BgimApplication in 1.983 seconds (JVM running for 2.846)
[INFO ] 13:39:46.794 com.system.bgim.AppRunner - ===========
[INFO ] 13:39:46.794 com.system.bgim.AppRunner - logger.info
[INFO ] 13:39:46.794 com.system.bgim.AppRunner - ===========
[TRACE] 13:39:46.794 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:39:46.794 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:39:46.794 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:39:46.794 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:39:46.794 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:39:46.795 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:39:52.833 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:39:52.923 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:39:52.923 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:39:53.007 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:39:53.007 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:39:53.009 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:39:53.009 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:39:53.011 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:39:53.011 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:39:53.016 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:39:53.016 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:39:53.016 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:39:53.018 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:39:53.019 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:39:53.019 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:39:53.020 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:39:53.020 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:39:53.020 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:39:56.368 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:39:56.371 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:39:56.372 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:39:56.380 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:39:56.380 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:39:56.381 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:39:56.383 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:39:56.384 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:39:59.202 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:39:59.203 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:39:59.203 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:39:59.211 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:39:59.215 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:39:59.219 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:39:59.219 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:39:59.220 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:39:59.220 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:39:59.221 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:39:59.222 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:39:59.223 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:39:59.223 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:39:59.224 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:40:01.991 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:40:01.991 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:40:01.991 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:40:01.993 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:40:01.994 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:40:01.994 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:40:01.996 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:40:01.996 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:40:05.170 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:40:05.170 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:40:05.171 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:40:05.172 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:40:05.172 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:40:05.172 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:40:05.172 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:40:05.173 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:40:05.174 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:40:05.174 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:40:05.178 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:40:05.179 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:40:05.180 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:40:05.180 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:40:11.930 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:40:11.931 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:40:11.932 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 13:40:11.947 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:40:11.948 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 13:40:11.949 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:40:11.949 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 13:40:11.952 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:40:11.952 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 1
[INFO ] 13:40:11.952 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|1                 |
|------------------|

[DEBUG] 13:40:11.952 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:40:11.954 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 13:40:11.955 c.s.b.m.H.userHistoryInsert - ==> Parameters: 1(Integer), success(String), mall(String), BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:40:11.955 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (1,'success','mall','BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[ERROR] 13:40:11.964 jdbc.sqlonly - 1. PreparedStatement.execute() INSERT INTO sync_history_user VALUES (1,'success','mall','BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

java.sql.SQLSyntaxErrorException: ORA-00913: 값의 수가 너무 많습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00913: 값의 수가 너무 많습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 102 common frames omitted
[DEBUG] 13:40:22.134 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:40:22.134 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:40:22.134 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:40:22.135 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:40:22.135 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:40:22.135 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:40:22.136 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:40:22.137 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:40:22.137 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:40:22.137 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:40:22.138 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:40:22.139 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:40:22.139 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:40:22.139 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:40:23.405 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:40:23.406 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:40:23.406 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 13:40:23.415 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:40:23.417 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 13:40:23.417 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:40:23.417 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 13:40:23.425 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:40:23.426 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 5
[INFO ] 13:40:23.426 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|5                 |
|------------------|

[DEBUG] 13:40:23.426 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:40:23.427 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 13:40:23.428 c.s.b.m.H.userHistoryInsert - ==> Parameters: 5(Integer), success(String), mall(String), BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:40:23.428 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (5,'success','mall','BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[DEBUG] 13:40:23.432 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[INFO ] 13:40:54.562 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 26864 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:40:54.564 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:40:54.564 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:40:56.743 com.system.bgim.BgimApplication - Started BgimApplication in 2.562 seconds (JVM running for 3.412)
[INFO ] 13:40:56.745 com.system.bgim.AppRunner - ===========
[INFO ] 13:40:56.746 com.system.bgim.AppRunner - logger.info
[INFO ] 13:40:56.746 com.system.bgim.AppRunner - ===========
[TRACE] 13:40:56.746 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:40:56.746 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:40:56.746 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:40:56.746 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:40:56.746 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:40:56.747 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:40:57.776 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:40:57.881 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:40:57.882 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:40:57.977 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:40:57.978 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:40:57.979 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:40:57.979 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:40:57.980 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:40:57.981 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:40:57.986 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:40:57.987 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:40:57.990 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:40:57.993 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:40:57.994 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:40:57.994 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:40:57.994 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:40:57.995 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:40:57.995 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:40:59.038 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:40:59.044 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:40:59.044 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:40:59.049 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:40:59.050 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:40:59.053 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:40:59.056 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:40:59.056 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:41:02.792 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:41:02.793 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:41:02.793 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:41:02.794 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:41:02.794 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:41:02.795 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:41:02.796 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:41:02.796 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:41:05.153 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:41:05.154 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:41:05.155 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:41:05.162 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:41:05.167 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:41:05.174 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:41:05.175 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:41:05.176 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:41:05.176 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:41:05.177 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:41:05.178 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:41:05.178 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:41:05.179 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:41:05.179 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:41:08.043 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:41:08.043 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:41:08.043 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:41:08.044 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:41:08.045 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:41:08.045 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:41:08.046 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:41:08.046 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:41:10.896 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:41:10.896 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:41:10.896 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:41:10.898 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:41:10.900 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:41:10.900 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:41:10.900 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:41:10.901 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:41:10.901 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:41:10.901 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:41:10.903 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:41:10.903 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:41:10.904 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:41:10.904 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:41:59.527 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:41:59.528 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:41:59.528 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:41:59.529 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:41:59.529 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:41:59.530 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:41:59.530 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:41:59.531 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:41:59.531 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:41:59.532 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:41:59.532 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:41:59.532 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:41:59.533 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:41:59.534 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:41:59.534 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:41:59.535 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:41:59.535 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:41:59.535 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:42:01.122 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:42:01.125 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:42:01.125 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

               modify_dt = SYSDATE,

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 13:42:01.128 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:42:01.130 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 13:42:01.131 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:42:01.131 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 13:42:01.132 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:42:01.132 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 1
[INFO ] 13:42:01.133 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|1                 |
|------------------|

[DEBUG] 13:42:01.133 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:42:01.134 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 13:42:01.135 c.s.b.m.H.userHistoryInsert - ==> Parameters: 1(Integer), success(String), mall(String), BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:42:01.135 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (1,'success','mall','BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[ERROR] 13:42:01.143 jdbc.sqlonly - 1. PreparedStatement.execute() INSERT INTO sync_history_user VALUES (1,'success','mall','BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

java.sql.SQLSyntaxErrorException: ORA-00913: 값의 수가 너무 많습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00913: 값의 수가 너무 많습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 102 common frames omitted
[DEBUG] 13:42:01.636 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:42:01.636 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:42:01.636 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:42:01.637 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:42:01.637 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:42:01.637 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:42:01.637 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:42:01.638 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:42:01.639 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGCOMMERCE.stevie5(String)
[INFO ] 13:42:01.639 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGCOMMERCE.stevie5'

[TRACE] 13:42:01.640 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:42:01.640 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:42:01.640 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:42:01.640 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:42:02.243 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:42:02.244 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Stevie(String), 1234(String), stevie5@gmail.com(String), stevie5(String), BGCOMMERCE(String), testdept(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:42:02.245 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Stevie',
            pwd = '1234',
            login_id = 'stevie5@gmail.com',

            empid = 'stevie5',
            companycode = 'BGCOMMERCE',
            deptcode = 'testdept'
        WHERE code = 'BGCOMMERCE.stevie5'

[DEBUG] 13:42:02.248 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:42:02.249 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 13:42:02.249 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:42:02.249 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 13:42:02.251 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:42:02.251 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 6
[INFO ] 13:42:02.251 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|6                 |
|------------------|

[DEBUG] 13:42:02.251 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:42:02.252 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 13:42:02.252 c.s.b.m.H.userHistoryInsert - ==> Parameters: 6(Integer), success(String), mall(String), BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.(String), BGCOMMERCE.stevie5(String)
[INFO ] 13:42:02.252 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (6,'success','mall','BGCOMMERCE.stevie5사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGCOMMERCE.stevie5')

[DEBUG] 13:42:02.254 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 13:42:02.289 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:42:02.290 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:42:02.290 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:42:02.294 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:42:02.295 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:42:02.296 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:42:02.298 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:42:02.298 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:42:04.798 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:42:04.798 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:42:04.798 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:42:04.799 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:42:04.800 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:42:04.801 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:42:04.801 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:42:08.763 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:42:08.764 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:42:08.764 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:42:08.766 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:42:08.766 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:42:08.767 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:42:08.767 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:42:08.768 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:42:08.769 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:42:08.770 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:42:08.773 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:42:08.773 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:42:08.773 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:42:08.773 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:42:12.081 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:42:12.082 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:42:12.082 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:42:12.083 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:42:12.083 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:42:12.084 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:42:12.084 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:42:15.292 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:42:15.292 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:42:15.293 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:42:15.294 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:42:15.294 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:42:15.294 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:42:15.294 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:42:15.295 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:42:15.295 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:42:15.296 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:42:15.297 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:42:15.297 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:42:15.298 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:42:15.298 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:42:17.394 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:42:17.394 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:42:17.394 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:42:17.396 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:42:17.396 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 13:42:17.396 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:42:17.397 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 13:42:17.397 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:42:17.397 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 1
[INFO ] 13:42:17.397 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|1                 |
|------------------|

[DEBUG] 13:42:17.397 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:42:17.398 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 13:42:17.398 c.s.b.m.H.userHistoryInsert - ==> Parameters: 1(Integer), success(String), mall(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:42:17.398 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (1,'success','mall','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[ERROR] 13:42:17.400 jdbc.sqlonly - 1. PreparedStatement.execute() INSERT INTO sync_history_user VALUES (1,'success','mall','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

java.sql.SQLSyntaxErrorException: ORA-00913: 값의 수가 너무 많습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00913: 값의 수가 너무 많습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 101 common frames omitted
[INFO ] 13:43:21.019 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 29156 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:43:21.022 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:43:21.022 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:43:22.985 com.system.bgim.BgimApplication - Started BgimApplication in 2.336 seconds (JVM running for 3.286)
[INFO ] 13:43:22.988 com.system.bgim.AppRunner - ===========
[INFO ] 13:43:22.988 com.system.bgim.AppRunner - logger.info
[INFO ] 13:43:22.988 com.system.bgim.AppRunner - ===========
[TRACE] 13:43:22.988 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:43:22.988 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:43:22.988 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:43:22.988 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:43:22.989 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:43:22.989 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:43:24.616 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:24.680 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:43:24.706 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[DEBUG] 13:43:24.706 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:43:24.706 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 13:43:24.706 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:43:24.777 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:24.777 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:43:24.778 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:24.780 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:24.780 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[TRACE] 13:43:24.780 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:24.782 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:24.782 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[INFO ] 13:43:24.783 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:43:24.783 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:43:24.790 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:43:24.790 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:24.790 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[DEBUG] 13:43:24.790 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:24.791 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[INFO ] 13:43:24.791 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:43:24.792 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:43:24.792 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:24.792 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[TRACE] 13:43:24.792 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:24.792 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[INFO ] 13:43:24.792 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:43:24.792 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[TRACE] 13:43:24.792 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:24.794 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:24.794 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:25.057 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:25.057 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:25.058 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:25.060 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:25.060 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:25.061 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:25.063 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:25.064 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:25.065 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:25.065 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:25.066 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:25.066 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:25.068 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:25.068 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:25.069 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:25.070 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:25.071 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:25.072 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:25.111 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:43:25.113 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:43:25.113 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:43:25.115 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:43:25.117 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 13:43:25.117 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:43:25.118 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 13:43:25.120 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:43:25.120 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 7
[INFO ] 13:43:25.122 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|7                 |
|------------------|

[DEBUG] 13:43:25.122 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:43:25.124 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:43:25.125 c.s.b.m.H.userHistoryInsert - ==> Parameters: 7(Integer), success(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:43:25.125 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[ERROR] 13:43:25.135 jdbc.sqlonly - 1. PreparedStatement.execute() INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

java.sql.SQLSyntaxErrorException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 102 common frames omitted
[DEBUG] 13:43:25.563 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:43:25.564 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:43:25.564 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:43:25.572 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:43:25.573 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:43:25.574 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:43:25.575 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:43:26.305 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:26.306 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:26.306 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:26.307 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:26.307 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:26.308 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:26.308 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:26.309 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:26.309 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:26.311 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:26.311 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:26.311 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:26.312 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:26.312 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:26.313 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:26.313 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:26.313 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:26.313 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:28.853 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:28.853 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:28.854 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:28.855 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:28.855 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:28.856 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:28.857 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:28.857 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:28.857 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:28.858 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:28.858 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:28.858 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:28.859 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:28.859 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:28.859 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:28.859 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:28.860 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:28.860 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:31.902 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:31.902 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:31.902 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:31.904 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:31.905 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:31.906 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:31.906 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:31.907 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:31.907 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:31.907 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:31.907 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:31.908 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:31.908 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:31.908 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:31.909 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:31.909 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:31.909 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:31.909 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:33.285 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:33.285 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:33.286 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:33.288 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:33.288 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:33.289 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:33.289 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:33.289 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:33.289 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:33.290 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:43:33.290 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:43:33.290 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:43:33.291 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:43:33.291 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:43:33.291 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:43:33.292 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:43:33.292 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:43:33.292 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:43:35.423 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:43:35.424 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:43:35.424 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:43:35.426 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:43:35.426 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:43:35.427 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:43:35.427 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:43:40.995 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:43:40.996 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:43:40.997 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:43:40.999 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:43:40.999 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:43:41.001 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:43:41.001 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:43:41.002 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:43:41.003 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:43:41.003 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:43:41.005 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:43:41.005 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:43:41.006 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:43:41.006 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:43:42.761 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:43:42.762 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:43:42.762 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:43:42.763 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:43:42.764 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:43:42.765 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:43:42.765 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:43:44.322 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:43:44.323 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:43:44.323 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:43:44.324 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:43:44.325 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:43:44.325 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:43:44.325 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:43:44.326 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:43:44.329 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:43:44.329 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:43:44.330 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:43:44.330 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:43:44.331 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:43:44.331 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:43:47.133 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:43:47.134 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:43:47.134 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:43:47.135 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:43:47.136 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 13:43:47.136 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:43:47.136 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 13:43:47.137 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:43:47.137 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 1
[INFO ] 13:43:47.138 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|1                 |
|------------------|

[DEBUG] 13:43:47.138 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:43:47.138 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:43:47.138 c.s.b.m.H.userHistoryInsert - ==> Parameters: 1(Integer), success(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:43:47.138 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (1,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 13:43:47.141 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 13:44:00.361 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:44:00.361 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:44:00.361 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:44:00.362 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:44:00.362 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:44:00.363 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:44:00.363 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:44:00.363 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:44:00.363 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:44:00.363 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:44:00.364 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:44:00.364 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:44:00.365 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:44:00.365 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:44:01.354 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:44:01.355 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:44:01.355 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:44:01.356 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:44:01.357 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:44:01.357 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:44:01.357 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[DEBUG] 13:44:01.357 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 13:44:01.358 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:44:01.358 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 13:44:01.358 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:44:01.359 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:44:01.359 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[TRACE] 13:44:01.359 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 7
[INFO ] 13:44:01.359 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|7                 |
|------------------|

[DEBUG] 13:44:01.359 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:44:01.360 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:44:01.360 c.s.b.m.H.userHistoryInsert - ==> Parameters: 7(Integer), success(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:44:01.360 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[INFO ] 13:44:01.360 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 13:44:01.360 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[ERROR] 13:44:01.363 jdbc.sqlonly - 2. PreparedStatement.execute() INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

java.sql.SQLSyntaxErrorException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 101 common frames omitted
[INFO ] 13:46:37.935 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 23336 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:46:37.937 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:46:37.938 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:46:39.828 com.system.bgim.BgimApplication - Started BgimApplication in 2.291 seconds (JVM running for 3.263)
[INFO ] 13:46:39.830 com.system.bgim.AppRunner - ===========
[INFO ] 13:46:39.831 com.system.bgim.AppRunner - logger.info
[INFO ] 13:46:39.831 com.system.bgim.AppRunner - ===========
[TRACE] 13:46:39.831 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:46:39.831 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:46:39.831 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:46:39.831 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:46:39.831 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:46:39.831 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:46:41.504 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:46:41.589 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:46:41.589 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:46:41.668 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:46:41.668 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:46:41.670 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:46:41.670 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:46:41.672 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:46:41.672 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:46:41.676 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:46:41.676 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:46:41.677 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:46:41.678 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:46:41.678 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:46:41.678 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:46:41.678 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:46:41.680 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:46:41.680 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:46:44.224 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:46:44.228 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:46:44.228 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:46:44.232 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:46:44.232 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:46:44.233 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:46:44.234 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:46:44.234 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:46:46.549 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:46:46.549 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:46:46.549 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:46:46.550 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:46:46.550 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:46:46.551 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:46:46.552 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:46:49.348 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:46:49.349 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:46:49.350 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:46:49.357 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:46:49.361 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:46:49.368 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:46:49.368 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:46:49.369 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:46:49.370 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:46:49.370 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:46:49.372 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:46:49.372 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:46:49.373 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:46:49.373 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:46:53.523 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:46:53.523 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:46:53.524 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:46:53.525 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:46:53.525 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:46:53.526 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:46:53.527 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:46:56.128 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:46:56.129 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:46:56.129 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:46:56.130 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:46:56.130 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:46:56.131 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:46:56.131 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:46:56.132 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:46:56.132 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:46:56.132 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:46:56.133 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:46:56.134 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:46:56.134 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:46:56.134 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:46:57.771 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:46:57.772 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:46:57.772 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:46:57.775 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:46:57.776 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 13:46:57.777 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:46:57.777 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 13:46:57.778 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:46:57.778 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 2
[INFO ] 13:46:57.778 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|2                 |
|------------------|

[DEBUG] 13:46:57.779 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:46:57.780 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:46:57.781 c.s.b.m.H.userHistoryInsert - ==> Parameters: 2(Integer), success(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:46:57.781 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (2,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 13:46:57.782 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 13:46:58.790 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:46:58.791 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:46:58.791 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:46:58.793 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:46:58.793 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:46:58.793 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:46:58.793 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:46:58.795 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:46:58.795 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:46:58.795 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:46:58.797 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:46:58.797 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:46:58.798 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:46:58.798 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:47:10.423 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:47:10.425 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:47:10.425 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:47:10.428 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:47:10.429 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 13:47:10.430 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:47:10.431 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 13:47:10.432 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:47:10.432 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 7
[INFO ] 13:47:10.433 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|7                 |
|------------------|

[DEBUG] 13:47:10.434 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:47:10.437 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:47:10.438 c.s.b.m.H.userHistoryInsert - ==> Parameters: 7(Integer), success(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:47:10.438 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[ERROR] 13:47:10.445 jdbc.sqlonly - 1. PreparedStatement.execute() INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

java.sql.SQLSyntaxErrorException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 101 common frames omitted
[INFO ] 13:49:25.379 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 21260 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:49:25.383 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:49:25.384 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[DEBUG] 13:49:47.336 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:49:47.337 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:49:47.337 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:49:47.339 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:49:47.340 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:49:47.340 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:49:47.341 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:49:47.342 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:49:47.342 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:49:47.342 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:49:47.342 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:49:47.342 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:49:47.344 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:49:47.344 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:49:47.344 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:49:47.344 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:49:47.345 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:49:47.345 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:49:47.404 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:49:47.405 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:49:47.405 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:49:47.408 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:49:47.409 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:49:47.411 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:49:47.412 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:49:51.098 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:49:51.098 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:49:51.098 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:49:51.099 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:49:51.099 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:49:51.100 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:49:51.100 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:49:51.100 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:49:53.254 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:49:53.254 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:49:53.255 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:49:53.256 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:49:53.256 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:49:53.257 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:49:53.257 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:49:55.896 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:49:55.896 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:49:55.897 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:49:55.898 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:49:55.898 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:49:55.899 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:49:55.899 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:49:55.900 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:49:55.901 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:49:55.901 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:49:55.902 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:49:55.903 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:49:55.903 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:49:55.903 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:49:58.786 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:49:58.787 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:49:58.787 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:49:58.788 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:49:58.788 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:49:58.789 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:49:58.789 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:50:01.493 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:50:01.494 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:50:01.495 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:50:01.496 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:50:01.496 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:50:01.496 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:50:01.497 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:50:01.497 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:50:01.498 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:50:01.498 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:50:01.499 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:50:01.499 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:50:01.500 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:50:01.500 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:50:03.431 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:50:03.431 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:50:03.431 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:50:03.432 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:50:03.433 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 13:50:03.433 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:50:03.433 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 13:50:03.434 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:50:03.434 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 3
[INFO ] 13:50:03.434 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|3                 |
|------------------|

[DEBUG] 13:50:03.434 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:50:03.434 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:50:03.435 c.s.b.m.H.userHistoryInsert - ==> Parameters: 3(Integer), success(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:50:03.435 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (3,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 13:50:03.436 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 13:50:04.317 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:50:04.317 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:50:04.317 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:50:04.318 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:50:04.318 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:50:04.319 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:50:04.319 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:50:04.319 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:50:04.319 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:50:04.319 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:50:04.320 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:50:04.320 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:50:04.321 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:50:04.321 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:50:11.011 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:50:11.012 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:50:11.012 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:50:11.015 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:50:11.016 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 13:50:11.016 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:50:11.017 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 13:50:11.020 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:50:11.021 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 7
[INFO ] 13:50:11.022 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|7                 |
|------------------|

[DEBUG] 13:50:11.023 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:50:11.024 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:50:11.024 c.s.b.m.H.userHistoryInsert - ==> Parameters: 7(Integer), success(String), BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:50:11.025 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[ERROR] 13:50:11.028 jdbc.sqlonly - 1. PreparedStatement.execute() INSERT INTO provision_history_user VALUES (7,'success','BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

java.sql.SQLSyntaxErrorException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:494)
	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:446)
	at oracle.jdbc.driver.T4C8Oall.processError(T4C8Oall.java:1054)
	at oracle.jdbc.driver.T4CTTIfun.receive(T4CTTIfun.java:623)
	at oracle.jdbc.driver.T4CTTIfun.doRPC(T4CTTIfun.java:252)
	at oracle.jdbc.driver.T4C8Oall.doOALL(T4C8Oall.java:612)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:226)
	at oracle.jdbc.driver.T4CPreparedStatement.doOall8(T4CPreparedStatement.java:59)
	at oracle.jdbc.driver.T4CPreparedStatement.executeForRows(T4CPreparedStatement.java:910)
	at oracle.jdbc.driver.OracleStatement.doExecuteWithTimeout(OracleStatement.java:1119)
	at oracle.jdbc.driver.OraclePreparedStatement.executeInternal(OraclePreparedStatement.java:3780)
	at oracle.jdbc.driver.T4CPreparedStatement.executeInternal(T4CPreparedStatement.java:1343)
	at oracle.jdbc.driver.OraclePreparedStatement.execute(OraclePreparedStatement.java:3887)
	at oracle.jdbc.driver.OraclePreparedStatementWrapper.execute(OraclePreparedStatementWrapper.java:1079)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at sun.reflect.GeneratedMethodAccessor62.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy81.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy55.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:58)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy66.userHistoryInsert(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy67.userHistoryInsert(Unknown Source)
	at com.system.bgim.service.HistoryService.userHistoryInsertService(HistoryService.java:34)
	at com.system.bgim.controller.UserController.userUpdateProc(UserController.java:153)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:878)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:792)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:652)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:733)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:541)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:373)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1589)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Unknown Source)
Caused by: oracle.jdbc.OracleDatabaseException: ORA-00947: 값의 수가 충분하지 않습니다

	at oracle.jdbc.driver.T4CTTIoer11.processError(T4CTTIoer11.java:498)
	... 101 common frames omitted
[DEBUG] 13:50:33.391 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:50:33.391 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:50:33.391 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:50:33.392 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:50:33.392 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:50:33.394 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:50:33.394 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 13:54:54.706 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 15228 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 13:54:54.710 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 13:54:54.711 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 13:54:56.706 com.system.bgim.BgimApplication - Started BgimApplication in 2.427 seconds (JVM running for 3.393)
[INFO ] 13:54:56.710 com.system.bgim.AppRunner - ===========
[INFO ] 13:54:56.710 com.system.bgim.AppRunner - logger.info
[INFO ] 13:54:56.710 com.system.bgim.AppRunner - ===========
[TRACE] 13:54:56.710 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 13:54:56.710 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 13:54:56.710 com.system.bgim.AppRunner - An INFO Message
[WARN ] 13:54:56.710 com.system.bgim.AppRunner - A WARN Message
[ERROR] 13:54:56.710 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 13:54:56.711 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 13:57:26.821 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:57:26.948 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:57:26.948 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:57:27.083 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:57:27.083 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:57:27.085 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:57:27.086 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:57:27.087 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:57:27.087 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:57:27.095 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:57:27.095 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:57:27.096 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:57:27.097 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:57:27.097 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:57:27.098 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:57:27.098 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:57:27.099 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:57:27.100 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:57:29.762 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:57:29.767 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:57:29.768 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:57:29.774 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:57:29.774 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:57:29.776 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:57:29.778 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:57:32.252 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:57:32.253 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:57:32.253 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:57:32.263 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:57:32.268 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:57:32.273 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:57:32.274 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:57:32.277 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:57:32.278 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:57:32.278 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:57:32.279 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:57:32.280 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:57:32.280 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:57:32.280 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:57:35.351 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:57:35.352 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:57:35.352 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:57:35.354 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:57:35.354 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:57:35.357 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:57:35.357 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:57:38.008 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:57:38.010 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:57:38.010 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:57:38.013 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:57:38.013 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:57:38.014 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:57:38.015 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:57:38.018 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:57:38.019 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:57:38.019 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:57:38.021 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:57:38.021 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:57:38.022 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:57:38.023 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:57:39.459 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:57:39.460 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:57:39.460 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:57:39.463 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:57:39.468 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 13:57:39.468 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:57:39.468 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 13:57:39.469 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:57:39.470 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 4
[INFO ] 13:57:39.470 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|4                 |
|------------------|

[DEBUG] 13:57:39.470 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:57:39.475 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 13:57:39.476 c.s.b.m.H.userHistoryInsert - ==> Parameters: 4(Integer), success(String), sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:57:39.476 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (4,'success','sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 13:57:39.477 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 13:57:50.493 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:57:50.493 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:57:50.493 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:57:50.494 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:57:50.494 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:57:50.495 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:57:50.495 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:57:50.495 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 13:57:50.495 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 13:57:50.495 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 13:57:50.496 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 13:57:50.496 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 13:57:50.497 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 13:57:50.497 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 13:57:51.323 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 13:57:51.325 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 13:57:51.325 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 13:57:51.328 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 13:57:51.330 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 13:57:51.331 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 13:57:51.331 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 13:57:51.333 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 13:57:51.333 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 7
[INFO ] 13:57:51.333 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|7                 |
|------------------|

[DEBUG] 13:57:51.333 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 13:57:51.334 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 13:57:51.335 c.s.b.m.H.userHistoryInsert - ==> Parameters: 7(Integer), success(String), mall(String), provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 13:57:51.336 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (7,'success','mall','provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 13:57:51.337 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 13:58:13.872 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:58:13.872 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:58:13.873 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:58:13.874 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:58:13.875 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:58:13.876 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:58:13.876 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:59:21.357 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM org_domain 
[DEBUG] 13:59:21.358 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:59:21.358 jdbc.sqlonly - SELECT
            *
        FROM org_domain

[TRACE] 13:59:21.365 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME, REG_DATE
[TRACE] 13:59:21.366 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce, 2000-12-01 00:00:00.0
[TRACE] 13:59:21.366 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGLAB, BG laboratory, 2000-09-11 00:00:00.0
[TRACE] 13:59:21.367 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGFOOD, BG food, 2000-08-01 00:00:00.0
[TRACE] 13:59:21.367 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture, null
[TRACE] 13:59:21.367 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space, null
[INFO ] 13:59:21.368 jdbc.resultsettable - 
|--------------|---------------|----------------------|
|companycode   |companyname    |reg_date              |
|--------------|---------------|----------------------|
|BGCOMMERCE    |BG commerce    |2000-12-01 00:00:00.0 |
|BGLAB         |BG laboratory  |2000-09-11 00:00:00.0 |
|BGFOOD        |BG food        |2000-08-01 00:00:00.0 |
|BGAGRICULTURE |BG agriculture |[null]                |
|BGSPACE       |BG space       |[null]                |
|--------------|---------------|----------------------|

[DEBUG] 13:59:21.368 c.s.b.mapper.DomainMapper.domainList - <==      Total: 5
[DEBUG] 13:59:23.626 c.s.bgim.mapper.DeptMapper.deptList - ==>  Preparing: SELECT * FROM org_dept 
[DEBUG] 13:59:23.627 c.s.bgim.mapper.DeptMapper.deptList - ==> Parameters: 
[INFO ] 13:59:23.627 jdbc.sqlonly - SELECT
            *
        FROM org_dept

[TRACE] 13:59:23.634 c.s.bgim.mapper.DeptMapper.deptList - <==    Columns: DEPTCODE, DEPTNAME, COMPANYCODE, REG_DATE
[TRACE] 13:59:23.634 c.s.bgim.mapper.DeptMapper.deptList - <==        Row: BIOCHEM1, biochemistry1, BGLAB, 2000-09-11 00:00:00.0
[TRACE] 13:59:23.634 c.s.bgim.mapper.DeptMapper.deptList - <==        Row: SEOULSUPPORT, seoul support, BGCOMMERCE, 2000-09-11 00:00:00.0
[TRACE] 13:59:23.635 c.s.bgim.mapper.DeptMapper.deptList - <==        Row: BIOCHEM2, biochemistry2, BGLAB, 2001-09-11 00:00:00.0
[TRACE] 13:59:23.635 c.s.bgim.mapper.DeptMapper.deptList - <==        Row: INCHEONSUPPORT, incheon support, BGCOMMERCE, 2001-09-11 00:00:00.0
[INFO ] 13:59:23.635 jdbc.resultsettable - 
|---------------|----------------|------------|----------------------|
|deptcode       |deptname        |companycode |reg_date              |
|---------------|----------------|------------|----------------------|
|BIOCHEM1       |biochemistry1   |BGLAB       |2000-09-11 00:00:00.0 |
|SEOULSUPPORT   |seoul support   |BGCOMMERCE  |2000-09-11 00:00:00.0 |
|BIOCHEM2       |biochemistry2   |BGLAB       |2001-09-11 00:00:00.0 |
|INCHEONSUPPORT |incheon support |BGCOMMERCE  |2001-09-11 00:00:00.0 |
|---------------|----------------|------------|----------------------|

[DEBUG] 13:59:23.636 c.s.bgim.mapper.DeptMapper.deptList - <==      Total: 4
[DEBUG] 13:59:26.712 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM org_domain 
[DEBUG] 13:59:26.712 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:59:26.712 jdbc.sqlonly - SELECT
            *
        FROM org_domain

[TRACE] 13:59:26.714 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME, REG_DATE
[TRACE] 13:59:26.714 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce, 2000-12-01 00:00:00.0
[TRACE] 13:59:26.715 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGLAB, BG laboratory, 2000-09-11 00:00:00.0
[TRACE] 13:59:26.715 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGFOOD, BG food, 2000-08-01 00:00:00.0
[TRACE] 13:59:26.715 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture, null
[TRACE] 13:59:26.716 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space, null
[INFO ] 13:59:26.717 jdbc.resultsettable - 
|--------------|---------------|----------------------|
|companycode   |companyname    |reg_date              |
|--------------|---------------|----------------------|
|BGCOMMERCE    |BG commerce    |2000-12-01 00:00:00.0 |
|BGLAB         |BG laboratory  |2000-09-11 00:00:00.0 |
|BGFOOD        |BG food        |2000-08-01 00:00:00.0 |
|BGAGRICULTURE |BG agriculture |[null]                |
|BGSPACE       |BG space       |[null]                |
|--------------|---------------|----------------------|

[DEBUG] 13:59:26.717 c.s.b.mapper.DomainMapper.domainList - <==      Total: 5
[DEBUG] 13:59:28.930 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:59:28.930 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:59:28.930 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:59:28.931 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:59:28.932 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:59:28.932 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:59:28.933 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:59:28.933 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:59:28.933 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:59:28.934 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 13:59:28.935 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 13:59:28.935 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 13:59:28.937 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 13:59:28.937 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 13:59:28.937 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 13:59:28.938 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 13:59:28.938 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 13:59:28.938 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 13:59:31.074 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:59:31.074 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 13:59:31.074 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 13:59:31.075 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:59:31.076 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 13:59:31.077 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:59:31.077 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 13:59:33.787 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:59:33.788 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGAGRICULTURE(String)
[INFO ] 13:59:33.788 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGAGRICULTURE'

[INFO ] 13:59:33.790 jdbc.resultsettable - 
|---------|------------|------|---------|-----|---------|------|-------|---------|
|username |companycode |empid |deptcode |code |login_id |email |mobile |hired_dt |
|---------|------------|------|---------|-----|---------|------|-------|---------|
|---------|------------|------|---------|-----|---------|------|-------|---------|

[DEBUG] 13:59:33.790 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 0
[DEBUG] 13:59:34.646 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 13:59:34.646 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGCOMMERCE(String)
[INFO ] 13:59:34.646 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGCOMMERCE'

[TRACE] 13:59:34.647 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 13:59:34.648 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Stevie, BGCOMMERCE, stevie5, SALES, BGCOMMERCE.stevie5, stevie5@gmail.com, stevie5@gmail.com, 010-1441-2109, 2011-03-01 00:00:00.0
[TRACE] 13:59:34.649 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Enyo, BGCOMMERCE, Enyo1, SALES, BGCOMMERCE.Enyo1, Enyo1@gmail.com, Enyo1@gmail.com, 010-8841-2335, 2011-04-02 00:00:00.0
[INFO ] 13:59:34.651 jdbc.resultsettable - 
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode |code               |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|
|Stevie   |BGCOMMERCE  |stevie5 |SALES    |BGCOMMERCE.stevie5 |stevie5@gmail.com |stevie5@gmail.com |010-1441-2109 |2011-03-01 00:00:00.0 |
|Enyo     |BGCOMMERCE  |Enyo1   |SALES    |BGCOMMERCE.Enyo1   |Enyo1@gmail.com   |Enyo1@gmail.com   |010-8841-2335 |2011-04-02 00:00:00.0 |
|---------|------------|--------|---------|-------------------|------------------|------------------|--------------|----------------------|

[DEBUG] 13:59:34.651 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 2
[DEBUG] 13:59:38.264 c.s.b.m.H.userHistoryList - ==>  Preparing: SELECT * FROM sync_history_user 
[DEBUG] 13:59:38.264 c.s.b.m.H.userHistoryList - ==> Parameters: 
[INFO ] 13:59:38.265 jdbc.sqlonly - SELECT * FROM sync_history_user

[TRACE] 13:59:38.268 c.s.b.m.H.userHistoryList - <==    Columns: HISTORY_ID, STATUS, CONTENT, EXECUTED_TIME, USER_ID
[TRACE] 13:59:38.269 c.s.b.m.H.userHistoryList - <==        Row: 0, success, BGCOMMERCE.stevie1의 인사동기화가 성공하였습니다, 2020-10-22 13:26:09.0, BGCOMMERCE.stevie1
[TRACE] 13:59:38.269 c.s.b.m.H.userHistoryList - <==        Row: 1, success, BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다., 2020-10-22 13:43:47.0, BGSPACE.hoxy000
[TRACE] 13:59:38.270 c.s.b.m.H.userHistoryList - <==        Row: 2, success, BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다., 2020-10-22 13:46:57.0, BGSPACE.hoxy000
[TRACE] 13:59:38.271 c.s.b.m.H.userHistoryList - <==        Row: 3, success, BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다., 2020-10-22 13:50:03.0, BGSPACE.hoxy000
[TRACE] 13:59:38.271 c.s.b.m.H.userHistoryList - <==        Row: 4, success, sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다., 2020-10-22 13:57:39.0, BGSPACE.hoxy000
[INFO ] 13:59:38.272 jdbc.resultsettable - 
|-----------|--------|------------------------------------------------------|----------------------|-------------------|
|history_id |status  |content                                               |executed_time         |user_id            |
|-----------|--------|------------------------------------------------------|----------------------|-------------------|
|0          |success |BGCOMMERCE.stevie1의 인사동기화가 성공하였습니다                    |2020-10-22 13:26:09.0 |BGCOMMERCE.stevie1 |
|1          |success |BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.        |2020-10-22 13:43:47.0 |BGSPACE.hoxy000    |
|2          |success |BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.        |2020-10-22 13:46:57.0 |BGSPACE.hoxy000    |
|3          |success |BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.        |2020-10-22 13:50:03.0 |BGSPACE.hoxy000    |
|4          |success |sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다. |2020-10-22 13:57:39.0 |BGSPACE.hoxy000    |
|-----------|--------|------------------------------------------------------|----------------------|-------------------|

[DEBUG] 13:59:38.273 c.s.b.m.H.userHistoryList - <==      Total: 5
[DEBUG] 13:59:53.532 c.s.b.m.D.dashboardList - ==>  Preparing: SELECT * FROM dashboard 
[DEBUG] 13:59:53.532 c.s.b.m.D.dashboardList - ==> Parameters: 
[INFO ] 13:59:53.533 jdbc.sqlonly - SELECT
            *
        FROM dashboard

[TRACE] 13:59:53.542 c.s.b.m.D.dashboardList - <==    Columns: BNO, SUBJECT, CONTENT, WRITER, REG_DATE
[TRACE] 13:59:53.543 c.s.b.m.D.dashboardList - <==        Row: 1, 아래 사용자 온라인몰 접속하도록 등록해주세요1, 안녕하세요, 아래 사용자 등록해주세요. 
companycode: BGCOMMERCE, 이름: Doris Wilsson 연락처: 010-9979-8657, 유주영 과장, 2020-09-11 00:00:00.0
[TRACE] 13:59:53.544 c.s.b.m.D.dashboardList - <==        Row: 0, 111, 111, 111, 2020-09-18 16:54:41.0
[INFO ] 13:59:53.544 jdbc.resultsettable - 
|----|--------------------------|--------------------------------------------------------------------------------------|-------|----------------------|
|bno |subject                   |content                                                                               |writer |reg_date              |
|----|--------------------------|--------------------------------------------------------------------------------------|-------|----------------------|
|1   |아래 사용자 온라인몰 접속하도록 등록해주세요1 |안녕하세요, 아래 사용자 등록해주세요. 
companycode: BGCOMMERCE, 이름: Doris Wilsson 연락처: 010-9979-8657 |유주영 과장 |2020-09-11 00:00:00.0 |
|0   |111                       |111                                                                                   |111    |2020-09-18 16:54:41.0 |
|----|--------------------------|--------------------------------------------------------------------------------------|-------|----------------------|

[DEBUG] 13:59:53.545 c.s.b.m.D.dashboardList - <==      Total: 2
[DEBUG] 14:01:11.529 c.s.bgim.mapper.UserMapper.userList - ==>  Preparing: SELECT * FROM org_user 
[DEBUG] 14:01:11.529 c.s.bgim.mapper.UserMapper.userList - ==> Parameters: 
[INFO ] 14:01:11.530 jdbc.sqlonly - SELECT * FROM org_user

[TRACE] 14:01:11.535 c.s.bgim.mapper.UserMapper.userList - <==    Columns: USER_ID, DOMAIN_ID, DEPT_ID, HR_GROUP_ID, HR_SYNC, HR_SYNC_GROUP, STATUS, IS_VALID, CREATE_DT, MODIFY_DT, PWD_DT, USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, PWD, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:01:11.536 c.s.bgim.mapper.UserMapper.userList - <==        Row: 10, 1, 10, 10, 1, 1, sync, Y, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, 2020-09-07 00:00:00.0, toni kroos, BGCOMMERCE, tonikroos1, CUSTOMER SUPPORT, BGCOMMERCE.tonikroos1, tonikroos1@gmail.com, 1234, tonikroos1@gmail.com, 010-8223-2221, 2020-02-01 00:00:00.0
[TRACE] 14:01:11.537 c.s.bgim.mapper.UserMapper.userList - <==        Row: 0, null, null, null, null, null, null, null, 2020-10-21 16:02:13.0, 2020-10-22 13:42:01.0, null, Stevie, BGCOMMERCE, stevie5, testdept, BGCOMMERCE.stevie5, stevie5@gmail.com, 1234, null, null, null
[TRACE] 14:01:11.539 c.s.bgim.mapper.UserMapper.userList - <==        Row: null, null, null, null, null, null, null, null, null, null, null, Ddal, BGSPACE, ddal1, ASTRONAUT, BGSPACE.ddal1, ddal1@gmail.com, 1234, ddal1@gmail.com, 010-1111-2299, 2011-04-01 00:00:00.0
[TRACE] 14:01:11.542 c.s.bgim.mapper.UserMapper.userList - <==        Row: 0, null, null, null, null, null, null, null, 2020-10-06 16:25:58.0, 2020-10-22 13:57:39.0, null, Hoxy, BGSPACE, hoxy000, testdept, BGSPACE.hoxy000, hoxy000@gmail.com, 1234, null, null, null
[INFO ] 14:01:11.556 jdbc.resultsettable - 
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|user_id |domain_id |dept_id |hr_group_id |hr_sync |hr_sync_group |status |is_valid |create_dt             |modify_dt             |pwd_dt                |username   |companycode |empid      |deptcode         |code                  |login_id             |pwd  |email                |mobile        |hired_dt              |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|
|10      |1         |10      |10          |1       |1             |sync   |Y        |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |2020-09-07 00:00:00.0 |toni kroos |BGCOMMERCE  |tonikroos1 |CUSTOMER SUPPORT |BGCOMMERCE.tonikroos1 |tonikroos1@gmail.com |1234 |tonikroos1@gmail.com |010-8223-2221 |2020-02-01 00:00:00.0 |
|0       |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |2020-10-21 16:02:13.0 |2020-10-22 13:42:01.0 |[null]                |Stevie     |BGCOMMERCE  |stevie5    |testdept         |BGCOMMERCE.stevie5    |stevie5@gmail.com    |1234 |[null]               |[null]        |[null]                |
|[null]  |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |[null]                |[null]                |[null]                |Ddal       |BGSPACE     |ddal1      |ASTRONAUT        |BGSPACE.ddal1         |ddal1@gmail.com      |1234 |ddal1@gmail.com      |010-1111-2299 |2011-04-01 00:00:00.0 |
|0       |[null]    |[null]  |[null]      |[null]  |[null]        |[null] |[null]   |2020-10-06 16:25:58.0 |2020-10-22 13:57:39.0 |[null]                |Hoxy       |BGSPACE     |hoxy000    |testdept         |BGSPACE.hoxy000       |hoxy000@gmail.com    |1234 |[null]               |[null]        |[null]                |
|--------|----------|--------|------------|--------|--------------|-------|---------|----------------------|----------------------|----------------------|-----------|------------|-----------|-----------------|----------------------|---------------------|-----|---------------------|--------------|----------------------|

[DEBUG] 14:01:11.556 c.s.bgim.mapper.UserMapper.userList - <==      Total: 4
[INFO ] 14:06:37.224 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 17412 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 14:06:37.227 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 14:06:37.228 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 14:06:39.260 com.system.bgim.BgimApplication - Started BgimApplication in 2.461 seconds (JVM running for 3.474)
[INFO ] 14:06:39.262 com.system.bgim.AppRunner - ===========
[INFO ] 14:06:39.262 com.system.bgim.AppRunner - logger.info
[INFO ] 14:06:39.262 com.system.bgim.AppRunner - ===========
[TRACE] 14:06:39.262 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 14:06:39.262 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 14:06:39.262 com.system.bgim.AppRunner - An INFO Message
[WARN ] 14:06:39.262 com.system.bgim.AppRunner - A WARN Message
[ERROR] 14:06:39.262 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 14:06:39.263 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 14:06:42.269 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:06:42.380 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:06:42.381 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:06:42.497 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:06:42.497 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:06:42.499 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:06:42.499 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:06:42.501 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:06:42.501 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 14:06:42.508 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:06:42.508 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:06:42.509 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:06:42.510 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:06:42.510 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:06:42.510 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:06:42.510 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:06:42.511 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:06:42.511 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[INFO ] 14:55:11.074 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 33424 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 14:55:11.077 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 14:55:11.078 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 14:55:13.119 com.system.bgim.BgimApplication - Started BgimApplication in 2.474 seconds (JVM running for 3.58)
[INFO ] 14:55:13.121 com.system.bgim.AppRunner - ===========
[INFO ] 14:55:13.121 com.system.bgim.AppRunner - logger.info
[INFO ] 14:55:13.121 com.system.bgim.AppRunner - ===========
[TRACE] 14:55:13.121 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 14:55:13.122 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 14:55:13.122 com.system.bgim.AppRunner - An INFO Message
[WARN ] 14:55:13.122 com.system.bgim.AppRunner - A WARN Message
[ERROR] 14:55:13.122 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 14:55:13.123 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 14:55:19.817 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:55:19.937 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:55:19.938 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:55:20.086 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:55:20.087 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:55:20.089 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:55:20.089 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:55:20.091 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:55:20.091 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 14:55:20.096 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:55:20.097 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:55:20.098 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:55:20.100 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:55:20.100 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:55:20.100 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:55:20.101 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:55:20.101 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:55:20.101 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 14:55:27.597 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:55:27.600 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:55:27.600 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 14:55:27.608 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:55:27.609 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:55:27.611 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:55:27.611 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:55:29.894 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:55:29.895 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:55:29.895 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:55:29.904 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:55:29.912 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:55:29.915 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:55:29.916 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:55:29.916 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:55:29.917 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:55:29.917 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:55:29.918 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:55:29.918 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:55:29.918 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:55:29.918 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:55:31.658 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:55:31.658 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:55:31.658 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 14:55:31.660 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:55:31.660 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:55:31.662 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:55:31.662 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:55:33.210 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:55:33.211 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:55:33.211 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:55:33.214 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:55:33.214 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:55:33.214 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:55:33.215 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:55:33.215 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:55:33.215 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:55:33.215 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:55:33.216 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:55:33.216 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:55:33.216 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:55:33.217 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:55:34.764 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 14:55:34.765 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 14:55:34.765 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 14:55:34.785 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 14:55:34.787 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 14:55:34.787 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 14:55:34.787 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 14:55:34.795 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 14:55:34.796 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 5
[INFO ] 14:55:34.796 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|5                 |
|------------------|

[DEBUG] 14:55:34.796 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 14:55:34.799 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 14:55:34.800 c.s.b.m.H.userHistoryInsert - ==> Parameters: 5(Integer), success(String), sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 14:55:34.800 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (5,'success','sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 14:55:34.803 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 14:55:35.328 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:55:35.329 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:55:35.329 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:55:35.330 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:55:35.330 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:55:35.331 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:55:35.331 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:55:35.331 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:55:35.332 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:55:35.332 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:55:35.333 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:55:35.333 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:55:35.333 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:55:35.334 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:55:35.958 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 14:55:35.960 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 14:55:35.960 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 14:55:35.960 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:55:35.960 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:55:35.960 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 14:55:35.961 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:55:35.962 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:55:35.963 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:55:35.963 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:55:35.965 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 14:55:35.966 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 14:55:35.967 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 14:55:35.967 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 14:55:35.976 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 14:55:35.976 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 8
[INFO ] 14:55:35.977 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|8                 |
|------------------|

[DEBUG] 14:55:35.977 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 14:55:35.978 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 14:55:35.979 c.s.b.m.H.userHistoryInsert - ==> Parameters: 8(Integer), success(String), mall(String), provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 14:55:35.979 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (8,'success','mall','provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 14:55:35.984 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[INFO ] 14:56:28.840 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 32612 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 14:56:28.844 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 14:56:28.844 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 14:56:30.834 com.system.bgim.BgimApplication - Started BgimApplication in 2.419 seconds (JVM running for 3.429)
[INFO ] 14:56:30.835 com.system.bgim.AppRunner - ===========
[INFO ] 14:56:30.836 com.system.bgim.AppRunner - logger.info
[INFO ] 14:56:30.836 com.system.bgim.AppRunner - ===========
[TRACE] 14:56:30.836 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 14:56:30.836 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 14:56:30.836 com.system.bgim.AppRunner - An INFO Message
[WARN ] 14:56:30.836 com.system.bgim.AppRunner - A WARN Message
[ERROR] 14:56:30.836 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 14:56:30.836 com.system.bgim.AppRunner - slf4j since 20201012
[INFO ] 14:56:43.971 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 26116 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 14:56:43.975 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 14:56:43.975 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 14:56:45.964 com.system.bgim.BgimApplication - Started BgimApplication in 2.415 seconds (JVM running for 3.394)
[INFO ] 14:56:45.967 com.system.bgim.AppRunner - ===========
[INFO ] 14:56:45.968 com.system.bgim.AppRunner - logger.info
[INFO ] 14:56:45.968 com.system.bgim.AppRunner - ===========
[TRACE] 14:56:45.968 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 14:56:45.968 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 14:56:45.968 com.system.bgim.AppRunner - An INFO Message
[WARN ] 14:56:45.968 com.system.bgim.AppRunner - A WARN Message
[ERROR] 14:56:45.968 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 14:56:45.969 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 14:56:52.661 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:56:52.777 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:56:52.777 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:56:52.881 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:56:52.882 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:56:52.884 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:56:52.884 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:56:52.886 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:56:52.886 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 14:56:52.893 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:56:52.893 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:56:52.894 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:56:52.895 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:56:52.895 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:56:52.895 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:56:52.895 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:56:52.896 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:56:52.896 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 14:56:55.241 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:56:55.244 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:56:55.244 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 14:56:55.247 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:56:55.248 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:56:55.250 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:56:55.250 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:56:56.569 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:56:56.570 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:56:56.570 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:56:56.576 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:56:56.578 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:56:56.580 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:56:56.581 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:56:56.582 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:56:56.584 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:56:56.585 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:56:56.589 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:56:56.589 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:56:56.590 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:56:56.590 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:56:59.042 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:56:59.043 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:56:59.043 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 14:56:59.044 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:56:59.044 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:56:59.045 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:56:59.326 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:57:00.433 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:57:00.434 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:57:00.434 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:57:00.436 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:57:00.436 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:57:00.439 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:57:00.439 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:57:00.440 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:57:00.440 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:57:00.440 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:57:00.442 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:57:00.442 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:57:00.442 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:57:00.442 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:57:02.172 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 14:57:02.173 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 14:57:02.173 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 14:57:02.176 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 14:57:02.178 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 14:57:02.178 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 14:57:02.179 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 14:57:02.180 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 14:57:02.180 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 6
[INFO ] 14:57:02.181 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|6                 |
|------------------|

[DEBUG] 14:57:02.182 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 14:57:02.186 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 14:57:02.187 c.s.b.m.H.userHistoryInsert - ==> Parameters: 6(Integer), success(String), sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 14:57:02.187 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (6,'success','sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 14:57:02.188 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 14:57:02.693 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:57:02.693 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:57:02.693 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:57:02.694 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:57:02.695 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:57:02.695 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:57:02.695 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:57:02.696 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:57:02.696 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:57:02.696 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:57:02.697 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:57:02.697 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:57:02.698 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:57:02.698 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:57:03.223 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 14:57:03.223 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 14:57:03.223 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 14:57:03.224 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:57:03.225 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[DEBUG] 14:57:03.225 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[INFO ] 14:57:03.225 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[DEBUG] 14:57:03.225 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 14:57:03.226 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[TRACE] 14:57:03.226 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[INFO ] 14:57:03.226 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 14:57:03.227 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[TRACE] 14:57:03.227 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 14:57:03.227 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 9
[INFO ] 14:57:03.228 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|9                 |
|------------------|

[DEBUG] 14:57:03.228 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[INFO ] 14:57:03.228 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:57:03.228 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:57:03.228 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 14:57:03.229 c.s.b.m.H.userHistoryInsert - ==> Parameters: 9(Integer), success(String), mall(String), provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 14:57:03.229 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (9,'success','mall','provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 14:57:03.230 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[INFO ] 14:59:03.116 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 32580 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 14:59:03.119 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 14:59:03.119 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 14:59:05.268 com.system.bgim.BgimApplication - Started BgimApplication in 2.575 seconds (JVM running for 3.556)
[INFO ] 14:59:05.270 com.system.bgim.AppRunner - ===========
[INFO ] 14:59:05.270 com.system.bgim.AppRunner - logger.info
[INFO ] 14:59:05.270 com.system.bgim.AppRunner - ===========
[TRACE] 14:59:05.270 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 14:59:05.270 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 14:59:05.270 com.system.bgim.AppRunner - An INFO Message
[WARN ] 14:59:05.270 com.system.bgim.AppRunner - A WARN Message
[ERROR] 14:59:05.270 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 14:59:05.271 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 14:59:08.297 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:59:08.408 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:59:08.409 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:59:08.518 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:59:08.518 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:59:08.521 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:59:08.521 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:59:08.522 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:59:08.523 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 14:59:08.529 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 14:59:08.529 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 14:59:08.530 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 14:59:08.531 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 14:59:08.531 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 14:59:08.531 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 14:59:08.531 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 14:59:08.532 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 14:59:08.532 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 14:59:14.433 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:59:14.437 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:59:14.437 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 14:59:14.441 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:59:14.441 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:59:14.444 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:59:14.444 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:59:15.846 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:59:15.847 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:59:15.847 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:59:15.852 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:59:15.856 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:59:15.860 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:59:15.860 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:59:15.862 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:59:15.862 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:59:15.862 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:59:15.864 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:59:15.864 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:59:15.864 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:59:15.865 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:59:20.455 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:59:20.456 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:59:20.456 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 14:59:20.457 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 14:59:20.457 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:59:20.459 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:59:20.460 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:59:21.722 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:59:21.723 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:59:21.723 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:59:21.724 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:59:21.724 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:59:21.725 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:59:21.725 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:59:21.725 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:59:21.726 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:59:21.726 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:59:21.727 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:59:21.727 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:59:21.727 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:59:21.727 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:59:23.845 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 14:59:23.845 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 14:59:23.846 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 14:59:23.848 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 14:59:23.852 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 14:59:23.852 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 14:59:23.852 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 14:59:23.855 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 14:59:23.855 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 7
[INFO ] 14:59:23.856 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|7                 |
|------------------|

[DEBUG] 14:59:23.856 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 14:59:23.858 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 14:59:23.859 c.s.b.m.H.userHistoryInsert - ==> Parameters: 7(Integer), success(String), sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 14:59:23.859 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (7,'success','sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 14:59:23.860 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 14:59:24.458 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:59:24.458 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:59:24.458 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:59:24.459 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:59:24.459 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:59:24.460 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:59:24.460 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:59:24.460 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 14:59:24.461 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 14:59:24.461 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 14:59:24.462 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 14:59:24.462 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 14:59:24.462 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 14:59:24.462 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 14:59:25.038 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 14:59:25.039 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 14:59:25.039 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 14:59:25.040 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 14:59:25.040 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 14:59:25.040 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[DEBUG] 14:59:25.040 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 14:59:25.041 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[TRACE] 14:59:25.041 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[DEBUG] 14:59:25.041 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[TRACE] 14:59:25.041 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 14:59:25.042 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 14:59:25.043 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 14:59:25.043 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 10
[INFO ] 14:59:25.043 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|10                |
|------------------|

[DEBUG] 14:59:25.043 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[INFO ] 14:59:25.043 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 14:59:25.044 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 14:59:25.044 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[DEBUG] 14:59:25.044 c.s.b.m.H.userHistoryInsert - ==> Parameters: 10(Integer), success(String), mall(String), provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 14:59:25.044 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (10,'success','mall','provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 14:59:25.045 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[INFO ] 15:01:02.340 com.system.bgim.BgimApplication - Starting BgimApplication on DESKTOP-TPI5MRV with PID 10708 (D:\git_src\bgim\target\classes started by inufu in D:\git_src\bgim)
[DEBUG] 15:01:02.344 com.system.bgim.BgimApplication - Running with Spring Boot v2.3.3.RELEASE, Spring v5.2.8.RELEASE
[INFO ] 15:01:02.344 com.system.bgim.BgimApplication - No active profile set, falling back to default profiles: default
[INFO ] 15:01:04.318 com.system.bgim.BgimApplication - Started BgimApplication in 2.397 seconds (JVM running for 3.378)
[INFO ] 15:01:04.320 com.system.bgim.AppRunner - ===========
[INFO ] 15:01:04.321 com.system.bgim.AppRunner - logger.info
[INFO ] 15:01:04.321 com.system.bgim.AppRunner - ===========
[TRACE] 15:01:04.321 com.system.bgim.AppRunner - A TRACE Message
[DEBUG] 15:01:04.321 com.system.bgim.AppRunner - A DEBUG Message
[INFO ] 15:01:04.321 com.system.bgim.AppRunner - An INFO Message
[WARN ] 15:01:04.321 com.system.bgim.AppRunner - A WARN Message
[ERROR] 15:01:04.321 com.system.bgim.AppRunner - An ERROR Message
[INFO ] 15:01:04.322 com.system.bgim.AppRunner - slf4j since 20201012
[DEBUG] 15:01:07.351 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 15:01:07.484 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 15:01:07.484 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 15:01:07.609 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 15:01:07.610 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 15:01:07.612 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 15:01:07.612 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 15:01:07.614 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 15:01:07.614 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 15:01:07.620 c.s.b.mapper.DomainMapper.domainList - ==>  Preparing: SELECT * FROM presync_domain 
[DEBUG] 15:01:07.620 c.s.b.mapper.DomainMapper.domainList - ==> Parameters: 
[INFO ] 15:01:07.621 jdbc.sqlonly - SELECT
            *
        FROM presync_domain

[TRACE] 15:01:07.622 c.s.b.mapper.DomainMapper.domainList - <==    Columns: COMPANYCODE, COMPANYNAME
[TRACE] 15:01:07.622 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGSPACE, BG space
[TRACE] 15:01:07.623 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGAGRICULTURE, BG agriculture
[TRACE] 15:01:07.623 c.s.b.mapper.DomainMapper.domainList - <==        Row: BGCOMMERCE, BG commerce
[INFO ] 15:01:07.624 jdbc.resultsettable - 
|--------------|---------------|
|companycode   |companyname    |
|--------------|---------------|
|BGSPACE       |BG space       |
|BGAGRICULTURE |BG agriculture |
|BGCOMMERCE    |BG commerce    |
|--------------|---------------|

[DEBUG] 15:01:07.625 c.s.b.mapper.DomainMapper.domainList - <==      Total: 3
[DEBUG] 15:01:10.959 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 15:01:10.962 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 15:01:10.962 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 15:01:10.965 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 15:01:10.966 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 15:01:10.968 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 15:01:10.968 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 15:01:12.953 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 15:01:12.954 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 15:01:12.954 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 15:01:12.959 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 15:01:12.962 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 15:01:12.963 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 15:01:12.964 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 15:01:12.965 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 15:01:12.967 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 15:01:12.967 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 15:01:12.969 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 15:01:12.969 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 15:01:12.970 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 15:01:12.971 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 15:01:14.322 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 15:01:14.322 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 15:01:14.322 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[TRACE] 15:01:14.323 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 15:01:14.324 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[INFO ] 15:01:14.325 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 15:01:14.326 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[DEBUG] 15:01:15.812 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 15:01:15.813 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 15:01:15.813 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 15:01:15.814 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 15:01:15.815 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 15:01:15.815 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 15:01:15.815 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 15:01:15.816 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 15:01:15.816 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 15:01:15.816 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 15:01:15.817 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 15:01:15.817 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 15:01:15.818 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 15:01:15.818 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 15:01:17.291 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE org_user SET username = ?, pwd = ?, login_id = ?, modify_dt = SYSDATE, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 15:01:17.292 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 15:01:17.292 jdbc.sqlonly - UPDATE org_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

               modify_dt = SYSDATE,

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 15:01:17.295 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 15:01:17.297 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from sync_history_user 
[DEBUG] 15:01:17.298 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 15:01:17.299 jdbc.sqlonly - select max(history_id)+1 from sync_history_user

[TRACE] 15:01:17.300 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 15:01:17.301 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 8
[INFO ] 15:01:17.301 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|8                 |
|------------------|

[DEBUG] 15:01:17.301 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 15:01:17.305 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO sync_history_user VALUES (?,?,?,SYSDATE,?) 
[DEBUG] 15:01:17.306 c.s.b.m.H.userHistoryInsert - ==> Parameters: 8(Integer), success(String), sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[INFO ] 15:01:17.306 jdbc.sqlonly - INSERT INTO sync_history_user VALUES (8,'success','sync : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 15:01:17.308 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
[DEBUG] 15:01:17.783 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 15:01:17.783 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 15:01:17.783 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 15:01:17.784 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 15:01:17.785 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 15:01:17.785 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 15:01:17.785 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 15:01:17.786 c.s.b.m.UserMapper.countUserService - ==>  Preparing: SELECT count(*) FROM org_user WHERE CODE = ? 
[DEBUG] 15:01:17.786 c.s.b.m.UserMapper.countUserService - ==> Parameters: BGSPACE.hoxy000(String)
[INFO ] 15:01:17.787 jdbc.sqlonly - SELECT
            count(*)
        FROM org_user
        WHERE
            CODE = 'BGSPACE.hoxy000'

[TRACE] 15:01:17.788 c.s.b.m.UserMapper.countUserService - <==    Columns: COUNT(*)
[TRACE] 15:01:17.788 c.s.b.m.UserMapper.countUserService - <==        Row: 1
[INFO ] 15:01:17.788 jdbc.resultsettable - 
|---------|
|count(*) |
|---------|
|1        |
|---------|

[DEBUG] 15:01:17.788 c.s.b.m.UserMapper.countUserService - <==      Total: 1
[DEBUG] 15:01:18.303 c.s.b.mapper.UserMapper.userUpdate - ==>  Preparing: UPDATE mall_user SET username = ?, pwd = ?, login_id = ?, empid = ?, companycode = ?, deptcode = ? WHERE code = ? 
[DEBUG] 15:01:18.304 c.s.b.mapper.UserMapper.userUpdate - ==> Parameters: Hoxy(String), 1234(String), hoxy000@gmail.com(String), hoxy000(String), BGSPACE(String), testdept(String), BGSPACE.hoxy000(String)
[INFO ] 15:01:18.304 jdbc.sqlonly - UPDATE mall_user
            SET
            username = 'Hoxy',
            pwd = '1234',
            login_id = 'hoxy000@gmail.com',

            empid = 'hoxy000',
            companycode = 'BGSPACE',
            deptcode = 'testdept'
        WHERE code = 'BGSPACE.hoxy000'

[DEBUG] 15:01:18.305 c.s.b.mapper.UserMapper.userUpdate - <==    Updates: 1
[DEBUG] 15:01:18.306 c.s.b.m.UserMapper.userListbyDomain - ==>  Preparing: SELECT * FROM presync_user where companycode= ? 
[DEBUG] 15:01:18.306 c.s.b.m.H.userHistoryInsert!selectKey - ==>  Preparing: select max(history_id)+1 from provision_history_user 
[DEBUG] 15:01:18.306 c.s.b.m.UserMapper.userListbyDomain - ==> Parameters: BGSPACE(String)
[INFO ] 15:01:18.306 jdbc.sqlonly - SELECT * FROM presync_user where companycode= 'BGSPACE'

[DEBUG] 15:01:18.306 c.s.b.m.H.userHistoryInsert!selectKey - ==> Parameters: 
[INFO ] 15:01:18.306 jdbc.sqlonly - select max(history_id)+1 from provision_history_user

[TRACE] 15:01:18.307 c.s.b.m.UserMapper.userListbyDomain - <==    Columns: USERNAME, COMPANYCODE, EMPID, DEPTCODE, CODE, LOGIN_ID, EMAIL, MOBILE, HIRED_DT
[TRACE] 15:01:18.307 c.s.b.m.UserMapper.userListbyDomain - <==        Row: Hoxy, BGSPACE, hoxy000, ASTRONAUT, BGSPACE.hoxy000, hoxy000@gmail.com, hoxy000@gmail.com, 010-9999-2299, 2011-01-01 00:00:00.0
[TRACE] 15:01:18.307 c.s.b.m.H.userHistoryInsert!selectKey - <==    Columns: MAX(HISTORY_ID)+1
[TRACE] 15:01:18.307 c.s.b.m.H.userHistoryInsert!selectKey - <==        Row: 11
[INFO ] 15:01:18.308 jdbc.resultsettable - 
|------------------|
|max(history_id)+1 |
|------------------|
|11                |
|------------------|

[DEBUG] 15:01:18.308 c.s.b.m.H.userHistoryInsert!selectKey - <==      Total: 1
[DEBUG] 15:01:18.308 c.s.b.m.H.userHistoryInsert - ==>  Preparing: INSERT INTO provision_history_user VALUES (?,?,?,?,SYSDATE,?) 
[INFO ] 15:01:18.308 jdbc.resultsettable - 
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|username |companycode |empid   |deptcode  |code            |login_id          |email             |mobile        |hired_dt              |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|
|Hoxy     |BGSPACE     |hoxy000 |ASTRONAUT |BGSPACE.hoxy000 |hoxy000@gmail.com |hoxy000@gmail.com |010-9999-2299 |2011-01-01 00:00:00.0 |
|---------|------------|--------|----------|----------------|------------------|------------------|--------------|----------------------|

[DEBUG] 15:01:18.308 c.s.b.m.H.userHistoryInsert - ==> Parameters: 11(Integer), success(String), mall(String), provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.(String), BGSPACE.hoxy000(String)
[DEBUG] 15:01:18.308 c.s.b.m.UserMapper.userListbyDomain - <==      Total: 1
[INFO ] 15:01:18.308 jdbc.sqlonly - INSERT INTO provision_history_user VALUES (11,'success','mall','provision : BGSPACE.hoxy000사용자 작업(userUpdateProc)을 성공했습니다.',SYSDATE,'BGSPACE.hoxy000')

[DEBUG] 15:01:18.310 c.s.b.m.H.userHistoryInsert - <==    Updates: 1
